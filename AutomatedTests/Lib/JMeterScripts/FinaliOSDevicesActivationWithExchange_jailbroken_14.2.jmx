<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.6" jmeter="2.11 r1554548">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="MDM Test" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">0</stringProp>
        <longProp name="ThreadGroup.start_time">1375695313000</longProp>
        <longProp name="ThreadGroup.end_time">1375695313000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="UDID Generator" enabled="true">
          <stringProp name="TestPlan.comments">${__RandomString(39,abcdefghijklmnopqrstuvwxyz0123456789,)}</stringProp>
          <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Sleep_Time" elementType="Argument">
                <stringProp name="Argument.name">Sleep_Time</stringProp>
                <stringProp name="Argument.value">100</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Sleep_Mask" elementType="Argument">
                <stringProp name="Argument.name">Sleep_Mask</stringProp>
                <stringProp name="Argument.value">0xFF</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Label" elementType="Argument">
                <stringProp name="Argument.name">Label</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ResponseCode" elementType="Argument">
                <stringProp name="Argument.name">ResponseCode</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ResponseMessage" elementType="Argument">
                <stringProp name="Argument.name">ResponseMessage</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Status" elementType="Argument">
                <stringProp name="Argument.name">Status</stringProp>
                <stringProp name="Argument.value">OK</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SamplerData" elementType="Argument">
                <stringProp name="Argument.name">SamplerData</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ResultData" elementType="Argument">
                <stringProp name="Argument.name">ResultData</stringProp>
                <stringProp name="Argument.value">${__RandomString(40,abcdefghijklmnopqrstuvwxyz0123456789,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="classname">org.apache.jmeter.protocol.java.test.JavaTest</stringProp>
        </JavaSampler>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="UDID Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">uvalue</stringProp>
            <stringProp name="RegexExtractor.regex">([0-9a-z-]{40}).*?</stringProp>
            <stringProp name="RegexExtractor.template">$0$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <stringProp name="Scope.variable"></stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Device Token Generator" enabled="true">
          <stringProp name="TestPlan.comments">${__RandomString(39,abcdefghijklmnopqrstuvwxyz0123456789,)}</stringProp>
          <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Sleep_Time" elementType="Argument">
                <stringProp name="Argument.name">Sleep_Time</stringProp>
                <stringProp name="Argument.value">100</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Sleep_Mask" elementType="Argument">
                <stringProp name="Argument.name">Sleep_Mask</stringProp>
                <stringProp name="Argument.value">0xFF</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Label" elementType="Argument">
                <stringProp name="Argument.name">Label</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ResponseCode" elementType="Argument">
                <stringProp name="Argument.name">ResponseCode</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ResponseMessage" elementType="Argument">
                <stringProp name="Argument.name">ResponseMessage</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Status" elementType="Argument">
                <stringProp name="Argument.name">Status</stringProp>
                <stringProp name="Argument.value">OK</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SamplerData" elementType="Argument">
                <stringProp name="Argument.name">SamplerData</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ResultData" elementType="Argument">
                <stringProp name="Argument.name">ResultData</stringProp>
                <stringProp name="Argument.value">${__RandomString(64,abcdefghijklmnopqrstuvwxyz0123456789,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="classname">org.apache.jmeter.protocol.java.test.JavaTest</stringProp>
        </JavaSampler>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Device Token Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">dtvalue</stringProp>
            <stringProp name="RegexExtractor.regex">([0-9a-z-]{40}).*?</stringProp>
            <stringProp name="RegexExtractor.template">$0$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <stringProp name="Scope.variable"></stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="DeviceId  Generator" enabled="true">
          <stringProp name="TestPlan.comments">${__RandomString(39,abcdefghijklmnopqrstuvwxyz0123456789,)}</stringProp>
          <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Sleep_Time" elementType="Argument">
                <stringProp name="Argument.name">Sleep_Time</stringProp>
                <stringProp name="Argument.value">100</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Sleep_Mask" elementType="Argument">
                <stringProp name="Argument.name">Sleep_Mask</stringProp>
                <stringProp name="Argument.value">0xFF</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Label" elementType="Argument">
                <stringProp name="Argument.name">Label</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ResponseCode" elementType="Argument">
                <stringProp name="Argument.name">ResponseCode</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ResponseMessage" elementType="Argument">
                <stringProp name="Argument.name">ResponseMessage</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Status" elementType="Argument">
                <stringProp name="Argument.name">Status</stringProp>
                <stringProp name="Argument.value">OK</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SamplerData" elementType="Argument">
                <stringProp name="Argument.name">SamplerData</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ResultData" elementType="Argument">
                <stringProp name="Argument.name">ResultData</stringProp>
                <stringProp name="Argument.value">${__RandomString(12,ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789,)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="classname">org.apache.jmeter.protocol.java.test.JavaTest</stringProp>
        </JavaSampler>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="DeviceID Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">IOSdeviceid</stringProp>
            <stringProp name="RegexExtractor.regex">([0-9A-Z-]{12}).*?</stringProp>
            <stringProp name="RegexExtractor.template">$0$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <stringProp name="Scope.variable"></stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">TestData.csv</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">username,pwd,server,SelectLiability</stringProp>
        </CSVDataSet>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="pwd" elementType="Argument">
              <stringProp name="Argument.name">pwd</stringProp>
              <stringProp name="Argument.value">gopats@12</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="username" elementType="Argument">
              <stringProp name="Argument.name">username</stringProp>
              <stringProp name="Argument.value">CCarrion</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="server" elementType="Argument">
              <stringProp name="Argument.name">server</stringProp>
              <stringProp name="Argument.value">qamdm-mdm9.qamdm.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="SelectLiability" elementType="Argument">
              <stringProp name="Argument.name">SelectLiability</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">Individual - 0 , Corporate - 1</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server}</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        </CookieManager>
        <hashTree/>
        <RecordingController guiclass="RecordController" testclass="RecordingController" testname="14.2 ios with exchange" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/MDM//Processing/_deviceRequestProcess.aspx" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#xd;
&lt;mdmTransaction&gt;&#xd;
&lt;message type=&quot;WhoAmI&quot; clientToken=&quot;IP 1.0.0&quot; version=&quot;1.0&quot; &gt;&#xd;
&lt;mdm version=&quot;13.3.3.1120&quot;&gt;&#xd;
&lt;email&gt;${username}&lt;/email&gt;&#xd;
&lt;password&gt;${pwd}&lt;/password&gt;&#xd;
&lt;isRegistered&gt;false&lt;/isRegistered&gt;&#xd;
&lt;sid&gt;&lt;/sid&gt;&#xd;
&lt;deviceSelectionResult&gt;&lt;/deviceSelectionResult&gt;&#xd;
&lt;/mdm&gt;&#xd;
&lt;device type=&quot;iPhone&quot;&gt;&#xd;
&lt;applications&gt;&#xd;
&lt;app version=&quot;7.0.3&quot;&gt;&lt;/app&gt;&#xd;
&lt;app version=&quot;&quot;&gt;&lt;/app&gt;&#xd;
&lt;/applications&gt;&#xd;
&lt;hardware&gt;&#xd;
&lt;model&gt;iPhone&lt;/model&gt;&#xd;
&lt;deviceOsVersion&gt;7.0.3&lt;/deviceOsVersion&gt;&#xd;
&lt;manufacturer&gt;Apple&lt;/manufacturer&gt;&#xd;
&lt;platform&gt;AppleiOS&lt;/platform&gt;&#xd;
&lt;usn&gt;&lt;/usn&gt;&#xd;
&lt;esn&gt;&lt;/esn&gt;&#xd;
&lt;memory&gt;11300.15&lt;/memory&gt;&#xd;
&lt;percentMemory&gt;82.90&lt;/percentMemory&gt;&#xd;
&lt;deviceToken&gt;${dtvalue}&lt;/deviceToken&gt;&#xd;
&lt;jailbroken&gt;true&lt;/jailbroken&gt;&#xd;
&lt;/hardware&gt;&#xd;
&lt;location&gt;&#xd;
&lt;latitude&gt;&lt;/latitude&gt;&#xd;
&lt;longitude&gt;&lt;/longitude&gt;&#xd;
&lt;/location&gt;&#xd;
&lt;/device&gt;&#xd;
&lt;/message&gt;&#xd;
&lt;hash&gt;&lt;/hash&gt;&#xd;
&lt;/mdmTransaction&gt;&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/MDM//Processing/_deviceRequestProcess.aspx</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/xml</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="TangoeDeviceInfoValues" elementType="Header">
                  <stringProp name="Header.name">TangoeDeviceInfoValues</stringProp>
                  <stringProp name="Header.value">7.0.3||iPhone|${dtvalue}|40%|False|11300.15|82.90|13.3.3.1120.1120</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Tangoe/1120 CFNetwork/672.0.8 Darwin/14.0.0</stringProp>
                </elementProp>
                <elementProp name="TangoeClientToken" elementType="Header">
                  <stringProp name="Header.name">TangoeClientToken</stringProp>
                  <stringProp name="Header.value">IP 1.0.0</stringProp>
                </elementProp>
                <elementProp name="TangoeUserPassword" elementType="Header">
                  <stringProp name="Header.name">TangoeUserPassword</stringProp>
                  <stringProp name="Header.value">${pwd}</stringProp>
                </elementProp>
                <elementProp name="TangoeCommandType" elementType="Header">
                  <stringProp name="Header.name">TangoeCommandType</stringProp>
                  <stringProp name="Header.value">WhoAmI</stringProp>
                </elementProp>
                <elementProp name="TangoeDeviceInfoLabels" elementType="Header">
                  <stringProp name="Header.name">TangoeDeviceInfoLabels</stringProp>
                  <stringProp name="Header.value">Device OS Version|SerialNumber|Model|Device Token|Battery Strength|Jailbroken|Memory|Percent Memory|ClientVersion</stringProp>
                </elementProp>
                <elementProp name="tangoe_xml_based_messaging" elementType="Header">
                  <stringProp name="Header.name">tangoe_xml_based_messaging</stringProp>
                  <stringProp name="Header.value">true</stringProp>
                </elementProp>
                <elementProp name="TangoeUserName" elementType="Header">
                  <stringProp name="Header.name">TangoeUserName</stringProp>
                  <stringProp name="Header.value">${username}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="uid Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">resultuid</stringProp>
              <stringProp name="RegexExtractor.regex">uid=(.+?)&amp;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">[1][1]</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/MDM/Mobile/Authentication/Activate" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="uid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">uid</stringProp>
                  <stringProp name="Argument.value">${resultuid}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clientInitiated" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clientInitiated</stringProp>
                  <stringProp name="Argument.value">True</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/MDM/Mobile/Authentication/Activate</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (iPhone; CPU iPhone OS 7_0_3 like Mac OS X) AppleWebKit/537.51.1 (KHTML, like Gecko) Mobile/11B511</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/MDM/Mobile/Activate/Device" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="clientInitiated" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clientInitiated</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/MDM/Mobile/Activate/Device</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (iPhone; CPU iPhone OS 7_0_3 like Mac OS X) AppleWebKit/537.51.1 (KHTML, like Gecko) Mobile/11B511</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/MDM/Mobile/Activate/FormFactor" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="clientInitiated" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clientInitiated</stringProp>
                  <stringProp name="Argument.value">True</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/MDM/Mobile/Activate/FormFactor</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (iPhone; CPU iPhone OS 7_0_3 like Mac OS X) AppleWebKit/537.51.1 (KHTML, like Gecko) Mobile/11B511</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/MDM/Mobile/Activate/Middleware" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sourceUrl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sourceUrl</stringProp>
                  <stringProp name="Argument.value">FormFactor</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="selectedFormFactor" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">selectedFormFactor</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clientInitiated" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clientInitiated</stringProp>
                  <stringProp name="Argument.value">True</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/MDM/Mobile/Activate/Middleware</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (iPhone; CPU iPhone OS 7_0_3 like Mac OS X) AppleWebKit/537.51.1 (KHTML, like Gecko) Mobile/11B511</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/MDM/Mobile/Activate/MiddlewareAction" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="backUrl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">backUrl</stringProp>
                  <stringProp name="Argument.value">FormFactor</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="isBackClicked" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isBackClicked</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="selectedService" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">selectedService</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="selectedFormFactor" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">selectedFormFactor</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clientInitiated" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clientInitiated</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/MDM/Mobile/Activate/MiddlewareAction</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${server}</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (iPhone; CPU iPhone OS 7_0_3 like Mac OS X) AppleWebKit/537.51.1 (KHTML, like Gecko) Mobile/11B511</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${server}/MDM/Mobile/Activate/Middleware?sourceUrl=FormFactor&amp;selectedFormFactor=1&amp;clientInitiated=True</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Check for Liability " enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">LiabilityStatus</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;/MDM/Mobile/Activate/(.+?)?sourceUrl=</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">[1][1]</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller when liability is on " enabled="true">
            <stringProp name="IfController.condition">&quot;${LiabilityStatus}&quot; == &quot;Liability?&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/MDM/Mobile/Activate/Liability" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="sourceUrl" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">sourceUrl</stringProp>
                    <stringProp name="Argument.value">Middleware</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="selectedService" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">selectedService</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="clientInitiated" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">clientInitiated</stringProp>
                    <stringProp name="Argument.value">True</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="selectedFormFactor" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">selectedFormFactor</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="selectedDevice" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">selectedDevice</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/MDM/Mobile/Activate/Liability</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (iPhone; CPU iPhone OS 7_0_3 like Mac OS X) AppleWebKit/537.51.1 (KHTML, like Gecko) Mobile/11B511</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://${server}/MDM/Mobile/Activate/Middleware?sourceUrl=FormFactor&amp;selectedFormFactor=1&amp;clientInitiated=True</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/MDM/Mobile/Activate/LiabilityAction" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="backUrl" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">backUrl</stringProp>
                    <stringProp name="Argument.value">Middleware</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="isBackClicked" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">isBackClicked</stringProp>
                    <stringProp name="Argument.value">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="selectedService" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">selectedService</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="selectedLiability" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">selectedLiability</stringProp>
                    <stringProp name="Argument.value">${SelectLiability}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="selectedFormFactor" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">selectedFormFactor</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="clientInitiated" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">clientInitiated</stringProp>
                    <stringProp name="Argument.value">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="selectedDevice" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">selectedDevice</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/MDM/Mobile/Activate/LiabilityAction</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://${server}</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (iPhone; CPU iPhone OS 7_0_3 like Mac OS X) AppleWebKit/537.51.1 (KHTML, like Gecko) Mobile/11B511</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://${server}/MDM/Mobile/Activate/Liability?sourceUrl=Middleware&amp;selectedService=3&amp;clientInitiated=True&amp;selectedFormFactor=1&amp;selectedDevice=0</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Individual Liable" enabled="true">
              <stringProp name="IfController.condition">&quot;${SelectLiability}&quot; == &quot;0&quot;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/MDM/Mobile/Activate/FinishDeviceSelection" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="sourceUrl" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">sourceUrl</stringProp>
                      <stringProp name="Argument.value">Liability</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="deviceId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">deviceId</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="clientInitiated" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">clientInitiated</stringProp>
                      <stringProp name="Argument.value">True</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="selectedService" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">selectedService</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="selectedFormFactor" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">selectedFormFactor</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="isCl" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">isCl</stringProp>
                      <stringProp name="Argument.value">False</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/MDM/Mobile/Activate/FinishDeviceSelection</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">text/html, */*; q=0.01</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (iPhone; CPU iPhone OS 7_0_3 like Mac OS X) AppleWebKit/537.51.1 (KHTML, like Gecko) Mobile/11B511</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip,deflate</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">https://${server}/MDM/Mobile/Activate/Liability?sourceUrl=Middleware&amp;selectedService=3&amp;clientInitiated=True&amp;selectedFormFactor=1&amp;selectedDevice=0</stringProp>
                    </elementProp>
                    <elementProp name="X-Requested-With" elementType="Header">
                      <stringProp name="Header.name">X-Requested-With</stringProp>
                      <stringProp name="Header.value">XMLHttpRequest</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/MDM/Mobile/Activate/FinishDeviceSelectionAction" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="backUrl" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">backUrl</stringProp>
                      <stringProp name="Argument.value">Liability</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="isBackClicked" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">isBackClicked</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="selectedDeviceId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">selectedDeviceId</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="selectedService" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">selectedService</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="selectedFormFactor" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">selectedFormFactor</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="isCl" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">isCl</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="clientInitiated" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">clientInitiated</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/MDM/Mobile/Activate/FinishDeviceSelectionAction</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">https://${server}</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (iPhone; CPU iPhone OS 7_0_3 like Mac OS X) AppleWebKit/537.51.1 (KHTML, like Gecko) Mobile/11B511</stringProp>
                    </elementProp>
                    <elementProp name="X-Requested-With" elementType="Header">
                      <stringProp name="Header.name">X-Requested-With</stringProp>
                      <stringProp name="Header.value">XMLHttpRequest</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">https://${server}/MDM/Mobile/Activate/FinishDeviceSelection?sourceUrl=Liability&amp;deviceId=0&amp;clientInitiated=True&amp;selectedService=3&amp;selectedFormFactor=1&amp;isCl=False</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip,deflate</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="deviceSelectionResult Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">deviceselectionresult</stringProp>
                  <stringProp name="RegexExtractor.regex">token&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">[1][1]</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Corporate Liable" enabled="true">
              <stringProp name="IfController.condition">&quot;${SelectLiability}&quot; == &quot;1&quot;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/MDM/Mobile/Activate/FinishDeviceSelection" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="sourceUrl" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">sourceUrl</stringProp>
                      <stringProp name="Argument.value">Liability</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="deviceId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">deviceId</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="clientInitiated" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">clientInitiated</stringProp>
                      <stringProp name="Argument.value">True</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="selectedService" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">selectedService</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="selectedFormFactor" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">selectedFormFactor</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="isCl" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">isCl</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/MDM/Mobile/Activate/FinishDeviceSelection</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">text/html, */*; q=0.01</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (iPhone; CPU iPhone OS 7_0_3 like Mac OS X) AppleWebKit/537.51.1 (KHTML, like Gecko) Mobile/11B511</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip,deflate</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">https://${server}/MDM/Mobile/Activate/Liability?sourceUrl=Middleware&amp;selectedService=3&amp;clientInitiated=True&amp;selectedFormFactor=1&amp;selectedDevice=0</stringProp>
                    </elementProp>
                    <elementProp name="X-Requested-With" elementType="Header">
                      <stringProp name="Header.name">X-Requested-With</stringProp>
                      <stringProp name="Header.value">XMLHttpRequest</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/MDM/Mobile/Activate/FinishDeviceSelectionAction" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="backUrl" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">backUrl</stringProp>
                      <stringProp name="Argument.value">Liability</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="isBackClicked" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">isBackClicked</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="selectedDeviceId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">selectedDeviceId</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="selectedService" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">selectedService</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="selectedFormFactor" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">selectedFormFactor</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="isCl" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">isCl</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="clientInitiated" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">clientInitiated</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/MDM/Mobile/Activate/FinishDeviceSelectionAction</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">https://${server}</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (iPhone; CPU iPhone OS 7_0_3 like Mac OS X) AppleWebKit/537.51.1 (KHTML, like Gecko) Mobile/11B511</stringProp>
                    </elementProp>
                    <elementProp name="X-Requested-With" elementType="Header">
                      <stringProp name="Header.name">X-Requested-With</stringProp>
                      <stringProp name="Header.value">XMLHttpRequest</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">https://${server}/MDM/Mobile/Activate/FinishDeviceSelection?sourceUrl=Liability&amp;deviceId=0&amp;clientInitiated=True&amp;selectedService=3&amp;selectedFormFactor=1&amp;isCl=False</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip,deflate</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="deviceSelectionResult Extractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">deviceselectionresult</stringProp>
                  <stringProp name="RegexExtractor.regex">token&quot;:&quot;(.+?)&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">[1][1]</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller when liability is off" enabled="true">
            <stringProp name="IfController.condition">&quot;${LiabilityStatus}&quot; == &quot;FinishDeviceSelection?&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/MDM/Mobile/Activate/FinishDeviceSelection" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="sourceUrl" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">sourceUrl</stringProp>
                    <stringProp name="Argument.value">Middleware</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="deviceId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">deviceId</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="clientInitiated" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">clientInitiated</stringProp>
                    <stringProp name="Argument.value">True</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="selectedFormFactor" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">selectedFormFactor</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="selectedService" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">selectedService</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/MDM/Mobile/Activate/FinishDeviceSelection</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-us</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (iPhone; CPU iPhone OS 7_0_3 like Mac OS X) AppleWebKit/537.51.1 (KHTML, like Gecko) Mobile/11B511</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://${server}/MDM/Mobile/Activate/Middleware?sourceUrl=FormFactor&amp;selectedFormFactor=1&amp;clientInitiated=True</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/MDM/Mobile/Activate/FinishDeviceSelectionAction" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="backUrl" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">backUrl</stringProp>
                    <stringProp name="Argument.value">Middleware</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="isBackClicked" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">isBackClicked</stringProp>
                    <stringProp name="Argument.value">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="selectedDeviceId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">selectedDeviceId</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="selectedService" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">selectedService</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="selectedFormFactor" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">selectedFormFactor</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="isCl" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">isCl</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="clientInitiated" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">clientInitiated</stringProp>
                    <stringProp name="Argument.value">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/MDM/Mobile/Activate/FinishDeviceSelectionAction</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://${server}</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (iPhone; CPU iPhone OS 7_0_3 like Mac OS X) AppleWebKit/537.51.1 (KHTML, like Gecko) Mobile/11B511</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://${server}/MDM/Mobile/Activate/FinishDeviceSelection?sourceUrl=Middleware&amp;deviceId=0&amp;clientInitiated=True&amp;selectedFormFactor=1&amp;selectedService=3</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="deviceSelectionResult Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">deviceselectionresult</stringProp>
                <stringProp name="RegexExtractor.regex">token&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">[1][1]</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/MDM//Processing/_deviceRequestProcess.aspx" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#xd;
&lt;mdmTransaction&gt;&#xd;
&lt;message type=&quot;WhoAmI&quot; clientToken=&quot;IP 1.0.0&quot; version=&quot;1.0&quot; &gt;&#xd;
&lt;mdm version=&quot;13.3.3.1120&quot;&gt;&#xd;
&lt;email&gt;${username}&lt;/email&gt;&#xd;
&lt;password&gt;${pwd}&lt;/password&gt;&#xd;
&lt;isRegistered&gt;false&lt;/isRegistered&gt;&#xd;
&lt;sid&gt;&lt;/sid&gt;&#xd;
&lt;deviceSelectionResult&gt;${deviceselectionresult}&lt;/deviceSelectionResult&gt;&#xd;
&lt;/mdm&gt;&#xd;
&lt;device type=&quot;iPhone&quot;&gt;&#xd;
&lt;applications&gt;&#xd;
&lt;app version=&quot;7.0.3&quot;&gt;&lt;/app&gt;&#xd;
&lt;app version=&quot;&quot;&gt;&lt;/app&gt;&#xd;
&lt;/applications&gt;&#xd;
&lt;hardware&gt;&#xd;
&lt;model&gt;iPhone&lt;/model&gt;&#xd;
&lt;deviceOsVersion&gt;7.0.3&lt;/deviceOsVersion&gt;&#xd;
&lt;manufacturer&gt;Apple&lt;/manufacturer&gt;&#xd;
&lt;platform&gt;AppleiOS&lt;/platform&gt;&#xd;
&lt;usn&gt;&lt;/usn&gt;&#xd;
&lt;esn&gt;&lt;/esn&gt;&#xd;
&lt;memory&gt;11299.20&lt;/memory&gt;&#xd;
&lt;percentMemory&gt;82.89&lt;/percentMemory&gt;&#xd;
&lt;deviceToken&gt;${dtvalue}&lt;/deviceToken&gt;&#xd;
&lt;jailbroken&gt;true&lt;/jailbroken&gt;&#xd;
&lt;/hardware&gt;&#xd;
&lt;location&gt;&#xd;
&lt;latitude&gt;&lt;/latitude&gt;&#xd;
&lt;longitude&gt;&lt;/longitude&gt;&#xd;
&lt;/location&gt;&#xd;
&lt;/device&gt;&#xd;
&lt;/message&gt;&#xd;
&lt;hash&gt;&lt;/hash&gt;&#xd;
&lt;/mdmTransaction&gt;&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/MDM//Processing/_deviceRequestProcess.aspx</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/xml</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="TangoeDeviceInfoValues" elementType="Header">
                  <stringProp name="Header.name">TangoeDeviceInfoValues</stringProp>
                  <stringProp name="Header.value">7.0.3||iPhone|${dtvalue}|40%|False|11299.20|82.89|13.3.3.1120.1120</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Tangoe/1120 CFNetwork/672.0.8 Darwin/14.0.0</stringProp>
                </elementProp>
                <elementProp name="TangoeClientToken" elementType="Header">
                  <stringProp name="Header.name">TangoeClientToken</stringProp>
                  <stringProp name="Header.value">IP 1.0.0</stringProp>
                </elementProp>
                <elementProp name="TangoeUserPassword" elementType="Header">
                  <stringProp name="Header.name">TangoeUserPassword</stringProp>
                  <stringProp name="Header.value">${pwd}</stringProp>
                </elementProp>
                <elementProp name="TangoeCommandType" elementType="Header">
                  <stringProp name="Header.name">TangoeCommandType</stringProp>
                  <stringProp name="Header.value">WhoAmI</stringProp>
                </elementProp>
                <elementProp name="TangoeDeviceInfoLabels" elementType="Header">
                  <stringProp name="Header.name">TangoeDeviceInfoLabels</stringProp>
                  <stringProp name="Header.value">Device OS Version|SerialNumber|Model|Device Token|Battery Strength|Jailbroken|Memory|Percent Memory|ClientVersion</stringProp>
                </elementProp>
                <elementProp name="tangoe_xml_based_messaging" elementType="Header">
                  <stringProp name="Header.name">tangoe_xml_based_messaging</stringProp>
                  <stringProp name="Header.value">true</stringProp>
                </elementProp>
                <elementProp name="TangoeUserName" elementType="Header">
                  <stringProp name="Header.name">TangoeUserName</stringProp>
                  <stringProp name="Header.value">${username}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="guid Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">resultguid</stringProp>
              <stringProp name="RegexExtractor.regex">activationGuid&gt;(.+?)&lt;/activationGuid</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">[1][1]</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="sid Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">resultsid</stringProp>
              <stringProp name="RegexExtractor.regex">sid&gt;(.+?)&lt;/sid</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">[1][1]</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="activationSid Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">resultactivationSid</stringProp>
              <stringProp name="RegexExtractor.regex">activationSid&gt;(.+?)&lt;/activationSid</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">[1][1]</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="smartphoneId Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">sid</stringProp>
              <stringProp name="RegexExtractor.regex">smartphoneId=&quot;(.+?)&quot;&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">[1][1]</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="hkey Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">hkey</stringProp>
              <stringProp name="RegexExtractor.regex">key&gt;(.+?)&lt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">[1][1]</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/MDM/Processing/IphoneProfileService.aspx" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="guid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">guid</stringProp>
                  <stringProp name="Argument.value">${resultguid}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sid</stringProp>
                  <stringProp name="Argument.value">${resultactivationSid}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/MDM/Processing/IphoneProfileService.aspx</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (iPhone; CPU iPhone OS 7_0_3 like Mac OS X) AppleWebKit/537.51.1 (KHTML, like Gecko) Version/7.0 Mobile/11B511 Safari/9537.53</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Sid1" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">resultSid1</stringProp>
              <stringProp name="RegexExtractor.regex">sid=(.+?)&lt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">[1][1]</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/MDM/Processing/IphoneProfileService.aspx?sid=39K3mseu8CkJNi2OismvhOHISkAlXt1meGRHdGTFaFLiftwjSHw5O8G4wBHgMQrFK2IG8b0lm6PcgZzMooQsLr73WzBUVbAcvj7BPR5BhWjHqXMQ%2bE2Xluikz6%2bCW1e8" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">0�&#x6;	*�H��&#xd;&#x1;&#x7;&#x2;��0�&#x2;&#x1;&#x1;1&#xb;0	&#x6;&#x5;+&#xe;&#x3;&#x2;&#x1a;&#x5;&#x0;0�&#x6;	*�H��&#xd;&#x1;&#x7;&#x1;��$�&#x4;�&#x2;&#x1a;&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;&#xd;
&lt;plist version=&quot;1.0&quot;&gt;&#xd;
&lt;dict&gt;&#xd;
	&lt;key&gt;CHALLENGE&lt;/key&gt;&#xd;
	&lt;string&gt;${resultguid}&lt;/string&gt;&#xd;
	&lt;key&gt;IMEI&lt;/key&gt;&#xd;
	&lt;string&gt;35 855105 122995 3&lt;/string&gt;&#xd;
	&lt;key&gt;PRODUCT&lt;/key&gt;&#xd;
	&lt;string&gt;iPhone5,4&lt;/string&gt;&#xd;
	&lt;key&gt;SERIAL&lt;/key&gt;&#xd;
	&lt;string&gt;${IOSdeviceid}&lt;/string&gt;&#xd;
	&lt;key&gt;UDID&lt;/key&gt;&#xd;
	&lt;string&gt;${uvalue}&lt;/string&gt;&#xd;
	&lt;key&gt;VERSION&lt;/key&gt;&#xd;
	&lt;string&gt;11B511&lt;/string&gt;&#xd;
&lt;/dict&gt;&#xd;
&lt;/plist&gt;&#xd;
&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;��&#xd;
[0�&#x2;�0�&#x2;\�&#x3;&#x2;&#x1;&#x2;&#x2;&#xd;
&#x1;�e���8L�0&#xd;&#x6;	*�H��&#xd;&#x1;&#x1;&#x5;&#x5;&#x0;0Z1&#xb;0	&#x6;&#x3;U&#x4;&#x6;&#x13;&#x2;US1&#x13;0&#x11;&#x6;&#x3;U&#x4;&#xd;
&#x13;&#xd;
Apple Inc.1&#x15;0&#x13;&#x6;&#x3;U&#x4;&#xb;&#x13;&#xc;Apple iPhone1&#x1f;0&#x1d;&#x6;&#x3;U&#x4;&#x3;&#x13;&#x16;Apple iPhone Device CA0&#x1e;&#x17;&#xd;140708101243Z&#x17;&#xd;170708101243Z0��1-0+&#x6;&#x3;U&#x4;&#x3;&#x16;$11F90B8F-AB7B-445B-A3F1-44DD313A40111&#xb;0	&#x6;&#x3;U&#x4;&#x6;&#x13;&#x2;US1&#xb;0	&#x6;&#x3;U&#x4;&#x8;&#x13;&#x2;CA1&#x12;0&#x10;&#x6;&#x3;U&#x4;&#x7;&#x13;	Cupertino1&#x13;0&#x11;&#x6;&#x3;U&#x4;&#xd;
&#x13;&#xd;
Apple Inc.1&#xf;0&#xd;&#x6;&#x3;U&#x4;&#xb;&#x13;&#x6;iPhone0��0&#xd;&#x6;	*�H��&#xd;&#x1;&#x1;&#x1;&#x5;&#x0;&#x3;��&#x0;0��&#x2;��&#x0;�٪�.&#x15;�tadh�D��Z&#x1b;���&amp;��k�&#x6;�xFp���3�&#x12;&#x1f;�ĆЖ&apos;Ф��&#x11;&#x11;�&quot;��?�^��&#x16;� ܭ�&#xf;i_?���&#x2;!�G�ə&#x16;%��&apos;D�ɪ&#x1e;�&#x1a;��&#xd;��y&#x1b;�&#x1b;�1G���&#x4;\Oǿ~.�&#x1a;3�&#x14;a���)&#x2;&#x3;&#x1;&#x0;&#x1;���0��0&#x1f;&#x6;&#x3;U&#x1d;#&#x4;&#x18;0&#x16;�&#x14;��!#D��jyՁ&amp;�s&#x10;اL�t0&#x1d;&#x6;&#x3;U&#x1d;&#xe;&#x4;&#x16;&#x4;&#x14;&#x1d;&#x7f;d�(���b�z��&#x2;���&#xe;0&#xc;&#x6;&#x3;U&#x1d;&#x13;&#x1;&#x1;�&#x4;&#x2;0&#x0;0&#xe;&#x6;&#x3;U&#x1d;&#xf;&#x1;&#x1;�&#x4;&#x4;&#x3;&#x2;&#x5;�0 &#x6;&#x3;U&#x1d;%&#x1;&#x1;�&#x4;&#x16;0&#x14;&#x6;&#x8;+&#x6;&#x1;&#x5;&#x5;&#x7;&#x3;&#x1;&#x6;&#x8;+&#x6;&#x1;&#x5;&#x5;&#x7;&#x3;&#x2;0&#x10;&#x6;&#xd;
*�H��cd&#x6;&#xd;
&#x2;&#x4;&#x2;&#x5;&#x0;0&#xd;&#x6;	*�H��&#xd;&#x1;&#x1;&#x5;&#x5;&#x0;&#x3;��&#x0;F&#xc;x0`˨�/�}c�C&#x15;r�f�&#xf;W�&#x7f;��\�&#x4;&lt;X&#x11;��5&#x1d;S�ӷ�&#xd;��|�\Ám�C��k��&#xf;c�kf��8�-&#x3;�Z+����H&#x8;�&#x1c;�&lt;� ��c�2�&#xc;�&#x1e;g���&#x19;�&#x14;y)�&#x14;�k%���gP�FP75,e��ɶ�&#x17;���0�&#x3;i0�&#x2;Q�&#x3;&#x2;&#x1;&#x2;&#x2;&#x1;&#x1;0&#xd;&#x6;	*�H��&#xd;&#x1;&#x1;&#x5;&#x5;&#x0;0y1&#xb;0	&#x6;&#x3;U&#x4;&#x6;&#x13;&#x2;US1&#x13;0&#x11;&#x6;&#x3;U&#x4;&#xd;
&#x13;&#xd;
Apple Inc.1&amp;0$&#x6;&#x3;U&#x4;&#xb;&#x13;&#x1d;Apple Certification Authority1-0+&#x6;&#x3;U&#x4;&#x3;&#x13;$Apple iPhone Certification Authority0&#x1e;&#x17;&#xd;070416225446Z&#x17;&#xd;140416225446Z0Z1&#xb;0	&#x6;&#x3;U&#x4;&#x6;&#x13;&#x2;US1&#x13;0&#x11;&#x6;&#x3;U&#x4;&#xd;
&#x13;&#xd;
Apple Inc.1&#x15;0&#x13;&#x6;&#x3;U&#x4;&#xb;&#x13;&#xc;Apple iPhone1&#x1f;0&#x1d;&#x6;&#x3;U&#x4;&#x3;&#x13;&#x16;Apple iPhone Device CA0��0&#xd;&#x6;	*�H��&#xd;&#x1;&#x1;&#x1;&#x5;&#x0;&#x3;��&#x0;0��&#x2;��&#x0;�J��Z&#x18;`�ˢMMNT&#x19;i&#x17;Y&#x7;f˗�f�G_F�gz�JsT��&#x4;��6�&#xc;U8���1Re�3�w�+L&amp;�%?�2�{&#x8;t���K8&#x1d;gN&#x8;R�Z�Y�\ד���U��LF�^n�wE/g\�&#xb;&#x18;�Y�l��*uv�&#x19;q�)c�%&#xb;�&#x2;&#x3;&#x1;&#x0;&#x1;���0��0&#xe;&#x6;&#x3;U&#x1d;&#xf;&#x1;&#x1;�&#x4;&#x4;&#x3;&#x2;&#x1;�0&#xf;&#x6;&#x3;U&#x1d;&#x13;&#x1;&#x1;�&#x4;&#x5;0&#x3;&#x1;&#x1;�0&#x1d;&#x6;&#x3;U&#x1d;&#xe;&#x4;&#x16;&#x4;&#x14;��!#D��jyՁ&amp;�s&#x10;اL�t0&#x1f;&#x6;&#x3;U&#x1d;#&#x4;&#x18;0&#x16;�&#x14;�4*.&quot;�9`k���w�a/1�|508&#x6;&#x3;U&#x1d;&#x1f;&#x4;10/0-�+�)�&apos;http://www.apple.com/appleca/iphone.crl0&#xd;&#x6;	*�H��&#xd;&#x1;&#x1;&#x5;&#x5;&#x0;&#x3;�&#x1;&#x1;&#x0;w]�gzLV+�Tw�YH&lt;&#x1e;�Џ��r��&#x1c;&#x15;w�&#xc;�iW�NÅF&#x16;v6�_�ꏵ��&#xd;
���&#xd;
�w�&#x12;�\!U&#x19;�G#G&#x11;��&#xd;�3�&#x14;��4X�i�=�ax)�����E8^�4&#x15;|&#x16;oi֨!u&#x2;&#x2;.v&#x18;/U�e��1Ro&#x19;ϼ�x�	&#x16;��B&#x1c;����&#x1d;&#x12;�@[,&#x1;��&#x7;����,&#x5;HXN�U%�U��%�F)t�R &#x4;@��ͼ���8�1/΄�)T�&gt;8!&#x19;ƛBU�v�6ݷ۳�^�Z?��v&#x2;��[^��q&#x7;!��9��o}�yR:L=y[�&#x8;�$&#xf;n�(�U���&lt;$0�&#x3;�0�&#x2;۠&#x3;&#x2;&#x1;&#x2;&#x2;&#x1;&#x17;0&#xd;&#x6;	*�H��&#xd;&#x1;&#x1;&#x5;&#x5;&#x0;0b1&#xb;0	&#x6;&#x3;U&#x4;&#x6;&#x13;&#x2;US1&#x13;0&#x11;&#x6;&#x3;U&#x4;&#xd;
&#x13;&#xd;
Apple Inc.1&amp;0$&#x6;&#x3;U&#x4;&#xb;&#x13;&#x1d;Apple Certification Authority1&#x16;0&#x14;&#x6;&#x3;U&#x4;&#x3;&#x13;&#xd;Apple Root CA0&#x1e;&#x17;&#xd;070412174328Z&#x17;&#xd;220412174328Z0y1&#xb;0	&#x6;&#x3;U&#x4;&#x6;&#x13;&#x2;US1&#x13;0&#x11;&#x6;&#x3;U&#x4;&#xd;
&#x13;&#xd;
Apple Inc.1&amp;0$&#x6;&#x3;U&#x4;&#xb;&#x13;&#x1d;Apple Certification Authority1-0+&#x6;&#x3;U&#x4;&#x3;&#x13;$Apple iPhone Certification Authority0�&#x1;&quot;0&#xd;&#x6;	*�H��&#xd;&#x1;&#x1;&#x1;&#x5;&#x0;&#x3;�&#x1;&#xf;&#x0;0�&#x1;&#xd;
&#x2;�&#x1;&#x1;&#x0;�&#x1e;��G���&#x10;[F��!�O�!p(E`\&#x1c;��&#xd;
dc���i��T��[�&#x6;N&#x4;/�k3�DL�K�	���[��dݳr�&#x13;��&#x17;ټ��&#x8c;a�*��Υ^�i�d&#xb;�&#x8;���PF	�&#x19;�尔m������AN��e�&#x1b;Rz��&#x3;�n&#x1d;�&#x10;U��)XI&#xc;�G�&#x15;43���DJp�,�*07�.&#x15;���l�8UV�5+X�D�&amp;���fJ�ω�=c�)ޭ�Z�ܥ���	N�&#x16;5e��&#xd;c{&gt;c��}JF�9&#x18;4��(e&#x18;�&#x13;`�&#x7f;W�&#x14;ɉ?�hR��N�ȃ��&#x19;���&#xb;�ǟ&#x2;&#x3;&#x1;&#x0;&#x1;���0��0&#xe;&#x6;&#x3;U&#x1d;&#xf;&#x1;&#x1;�&#x4;&#x4;&#x3;&#x2;&#x1;�0&#xf;&#x6;&#x3;U&#x1d;&#x13;&#x1;&#x1;�&#x4;&#x5;0&#x3;&#x1;&#x1;�0&#x1d;&#x6;&#x3;U&#x1d;&#xe;&#x4;&#x16;&#x4;&#x14;�4*.&quot;�9`k���w�a/1�|50&#x1f;&#x6;&#x3;U&#x1d;#&#x4;&#x18;0&#x16;�&#x14;+�iG�v	��k�.@��GM&#x7f;&#x8;^06&#x6;&#x3;U&#x1d;&#x1f;&#x4;/0-0+�)�&apos;�%http://www.apple.com/appleca/root.crl0&#xd;&#x6;	*�H��&#xd;&#x1;&#x1;&#x5;&#x5;&#x0;&#x3;�&#x1;&#x1;&#x0;&#x1d;��{�tN�&#x17;�-&#xc;��^Br�i��k^&#xd;&#xc;kK&gt;{&#x14;%&#x7b3;���&#xf;���&#x17;=&#x0;&#x2;����tWܯ���&#xd;
}0�&#x0;*�!Y��I�nu&#x19;�z&#x3;ц����&#xe;KI�A����V�}�����QJ&amp;��B&#x13;&amp;�&#x3;Tf&#x10;^`�&#x5;&#x12;1+kT���A�T&#x1e;�T�&#x13;&#x0;�Jǻ����&#x8;��F&#xd;
�&apos;����9:�p&#x19;#2�kf]�M�GI�{E�Q3�tg	N�loH�,�3&#x5;DkE�tKo����&gt;%(%���Q��O�;��D,&#x1;I�t�4�D�&#x14;�&#x11;�-&#x19;&#x1a;Q��&#x8;JAlXVޛ:�&#x5;W�b��&#xf;1�&#x1;m0�&#x1;i&#x2;&#x1;&#x1;0h0Z1&#xb;0	&#x6;&#x3;U&#x4;&#x6;&#x13;&#x2;US1&#x13;0&#x11;&#x6;&#x3;U&#x4;&#xd;
&#x13;&#xd;
Apple Inc.1&#x15;0&#x13;&#x6;&#x3;U&#x4;&#xb;&#x13;&#xc;Apple iPhone1&#x1f;0&#x1d;&#x6;&#x3;U&#x4;&#x3;&#x13;&#x16;Apple iPhone Device CA&#x2;&#xd;
&#x1;�e���8L�0	&#x6;&#x5;+&#xe;&#x3;&#x2;&#x1a;&#x5;&#x0;�]0&#x18;&#x6;	*�H��&#xd;&#x1;	&#x3;1&#xb;&#x6;	*�H��&#xd;&#x1;&#x7;&#x1;0&#x1c;&#x6;	*�H��&#xd;&#x1;	&#x5;1&#xf;&#x17;&#xd;140827095306Z0#&#x6;	*�H��&#xd;&#x1;	&#x4;1&#x16;&#x4;&#x14;;��i�T3q9-&#x1e;�&#x1;\&#x17;�/j�h0&#xd;&#x6;	*�H��&#xd;&#x1;&#x1;&#x1;&#x5;&#x0;&#x4;����N�r�J﹝&#xc;�D5XpS�&#x7;&#x2;V�����l�U��p8.�u{��M�?n����&#x16;�\�&#x1d;XU&#xf;l&#x2;[&#x1b;�&#xf;�&#x16;�D�&#xf;h�����VeE5c�n�x�&#x16;��0&#x2;�&#x7f;�&apos;�&#xd;
��o!�&#xd;J,w_Ua&#x1a;&quot;&#xc;]u�NP&#xc;X�&#x1f;�(xh&#x0;��&#x5;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/MDM/Processing/IphoneProfileService.aspx?sid=${resultSid1}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/pkcs7-signature</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Profile/1.0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/certsrv/mscep/mscep.dll" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="operation" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">operation</stringProp>
                  <stringProp name="Argument.value">GetCACert</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">qamdm-scep</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">scep.qamdm.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/certsrv/mscep/mscep.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">profiled/1.0 CFNetwork/672.0.8 Darwin/14.0.0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/certsrv/mscep/mscep.dll" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="operation" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">operation</stringProp>
                  <stringProp name="Argument.value">GetCACaps</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">qamdm-scep</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">scep.qamdm.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/certsrv/mscep/mscep.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">profiled/1.0 CFNetwork/672.0.8 Darwin/14.0.0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/certsrv/mscep/mscep.dll" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="operation" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">operation</stringProp>
                  <stringProp name="Argument.value">PKIOperation</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">MIAGCSqGSIb3DQEHAqCAMIACAQExDjAMBggqhkiG9w0CBQUAMIAGCSqGSIb3DQEHAaCAJIAEggRdMIAGCSqGSIb3DQEHA6CAMIACAQAxggFrMIIBZwIBADBPMEExEzARBgoJkiaJk%2FIsZAEZFgNDT00xFTATBgoJkiaJk%2FIsZAEZFgVRQU1ETTETMBEGA1UEAxMKUUFNRE0tU0NFUAIKYQf4gQAAAAAAAzANBgkqhkiG9w0BAQEFAASCAQCbuHMtI0UzEl%2Fe4jrONSCyktMeFUXlmUtFNk%2BN%2BOc4T748RLLyrwXSDaNN1ribsDuKFFh8nzmzjhYDfsZ7j7%2BRlHDpSVu%2B31IVvTC%2FicJGZ7aSWBBWvrmnQpicoGglWI0H1%2FLYVanj%2BrbWyfBtgLwkD%2FgzPeQWTGjF%2B7fylDSAz4mcZHvd4t%2Fx9OvckfONywNyGqldeCN235Ak5ah5o26rkx0s7XJtPk3cZG2YssWBnIMBVCF1C2pubmROOWmAKmgy0dz1r5SRn3vSA7JGtWfaCZ7HHAJEl%2Fnm2%2Fg%2BQKC7PE8wHFV%2FjhBAFUdslJrAMA1UZ6Fbj1ZqNWDA8tPjLzo9MIAGCSqGSIb3DQEHATARBgUrDgMCBwQIaAAWVm4je%2BqggASCAqCJSFacMaGvnhARwWdSUWsTlQSq9dhYrMfIJGpgpM5zqk3vBaxHUCaReZWselJnuAIx8dfW1WDxfxG5NrMn%2BpTSJKnxqLZ31MDs40Qr8lP8W%2Bduu43CksdXWdnG5L9TQjQptnQkYmX7VCf4bXLNVNIRl7%2BQLIwY%2BzUP7A5KsJ3QC9dhgkdlLH41xTd1FXgoxLD28siFZIIvZvzBaliVjiQvTWzu96ZVrasy5Zr90q67ImkbTLVqdyL9oagqEw27qsvTz0BOvI%2B6tTMTdFbxP8mYwAvg1YMZ0jY3qSgHNw6bbAGE2fFePM%2FztWH9Bi0NHOENPCIKxxNgAH47Zg52Sv5hGzwreNmpQXkhQ5Gzw1UQPzIorxXsw7SIYALLA%2FvKoK7wTvbV6BxXipwk2F8hKHTT6wqjExXzfJxsqHoidrq7sv225YQclCF0%2F%2FLpPCgbWiL7VA9Ql7%2BfQa7Du8EtSVh1yF6IEdeshYtJdJxwYD4r0HS6D4GtaG27%2FJPlRn%2Bfwy%2FWFbjrxtunkGxVCDCfSrCpv2KF3ecEVL5su2mG%2Fqo8OQilv0uQ5TjXzEng9yzuILCWjYs5ngQYqqt6lrB7QCxQfN%2B1zTxjpFl6JBb4W%2Fs4loSCWvjkxHF9%2Bw6RNVv8B6G80HS6EO2hes4HdHLAmmSAdqGudTKxaGIqlvwnLdG8UnPSBQu48eBgGq1KZDrsgSLhGjMTdDSpKtCKErgJg5dsMgaZI%2Fw2q67WaL5HsBQ0xNz2JnzV1FdLt1EMmlXgImqVPtS0U2FL3O2NqBX3z1ALPwGGMKbn5BB3%2BlG8FlUlClr%2BMXLaQCFA507wQzNEt8DrUM0DDyMTZCfEGdYh2GtftLBcQ2AYV1gU7CFDLz0gN4QI7CQnZz7VQrNH8zvLdF0ECPxnw4GFHV7rAAAAAAAAAAAAAAAAAAAAAKCCAu8wggLrMIIB06ADAgECAgEBMA0GCSqGSIb3DQEBBQUAMC8xLTArBgNVBAMTJENFQTcxQ0I4LUM5QkItNDExQS1BODIwLUFDMEM3OTQ1MTJCMzAeFw0xNDA4MjcwOTUzMjdaFw0xNTA4MjcwOTUzMjdaMC8xLTArBgNVBAMTJENFQTcxQ0I4LUM5QkItNDExQS1BODIwLUFDMEM3OTQ1MTJCMzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMpeS2JkDhVSXPoSg93uTkjkaJtfrPAHdWNwtTnYAWkU5EyRsy2K5F%2BfssR%2B8%2FTo40aObHmMN%2BwosrwVIl6CSagDCkLDWNbGtqTWREsq%2FAv612dOt82Tzbw%2FXaucQTX5k1ZaGf%2Fk4GQak%2BosGflqGD9nbFU5lZOTVFEH4jipD4W7n1eVpTZl2J33zatjVsAEU22KkM%2F1QEj%2FlUXRkU92io%2FFZtaGIooYhVkYVxwh9KNLprN4y3DufSp5AwzOueQ3pWSP9poLyNpE4wyp%2B%2BKQ4akPwqznuXIjKKbK685WqB723OCd8JTsL3IemKmIqwITGQkqOP%2BVSVR1XYq6VBCGtocCAwEAAaMSMBAwDgYDVR0PAQH%2FBAQDAgWgMA0GCSqGSIb3DQEBBQUAA4IBAQCTRILxyYKtdiLgciy8tjzRWQX%2B7CDDtCC7hEeenvm%2FkbRQCeSCtFYcb2xyhuPq9oMOTCW4iyJK5zm5jdvcpo1IMqxRjkLpSnTAkEJ1f8sHODVJEWe3QmkXt3TXO5pjycDAvu4k7koaZatCGH4JqmwIRIVjAJX0qgog0a7YnKu2NLrZYeV3GEgm3Xv3oVajiQA7ejjUXm20ohEMPArYexs6YC0B1VMOoIPIyu40tKa%2Bd1aI2ib8s3SZXj6aK%2FXmMyoY9rRMlGU%2F1zvokmfCi%2FiOdbNHZuepY4ZBuwwqefToMdh4OK6wlWT2ohYE59gg9ha2%2B0Il38nfsoNbpWeyPehCMYICKjCCAiYCAQEwNDAvMS0wKwYDVQQDEyRDRUE3MUNCOC1DOUJCLTQxMUEtQTgyMC1BQzBDNzk0NTEyQjMCAQEwDAYIKoZIhvcNAgUFAKCByTASBgpghkgBhvhFAQkCMQQTAjE5MBgGCSqGSIb3DQEJAzELBgkqhkiG9w0BBwEwHAYJKoZIhvcNAQkFMQ8XDTE0MDgyNzA5NTMyOFowHwYJKoZIhvcNAQkEMRIEEMndIFEYH9QOW8R0lrGaFv4wIAYKYIZIAYb4RQEJBTESBBCP5pUQvgSjM610x2JHLas8MDgGCmCGSAGG%2BEUBCQcxKhMoMzZGMkZFN0M1NTIwRDY1REMwQkIwMEJEMUI0MTdEMDEwODhCN0QwNzANBgkqhkiG9w0BAQEFAASCAQC7XjM0rDbFmi7bCDV%2BRGGLdByM1vCBp0aIAII%2FsN9hsGWP280I1MQMWRTjCNo%2FqnUR%2BsTTaXDuKe0CinQK4lgalY%2BX7DI67%2BWLigJNmNsRoovJl74EN2cWm9IjNHk28h4Ei6azL949%2BS8JbXZVXZmiLh0qYJGK%2B6jkkooAQo7chkxZmNS%2FWK7ItN2Lgky27qisqvA4T9%2FDBnnu%2Fsrky%2FqCG%2Be3dwjUivT8%2BMvqFVgaw1%2BeMnVYaG8FxybseOAkOx6SLiDWjg%2F%2FtCCZKPWl7UpcLhZAjzBRPtqAQJ%2FGWQ6QdUcze2TWlVfzdFr%2FlQEm1GPwGEjgrcHtW%2BV%2Fe8vEtyNFAAAAAAAA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">scep.qamdm.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/certsrv/mscep/mscep.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-pki-message</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">profiled/1.0 CFNetwork/672.0.8 Darwin/14.0.0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/MDM/Processing/IphoneProfileService.aspx?sid=39K3mseu8CkJNi2OismvhOHISkAlXt1meGRHdGTFaFLiftwjSHw5O8G4wBHgMQrFK2IG8b0lm6PcgZzMooQsLr73WzBUVbAcvj7BPR5BhWjHqXMQ%2bE2Xluikz6%2bCW1e8" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">0�&#x6;	*�H��&#xd;&#x1;&#x7;&#x2;��0�&#x2;&#x1;&#x1;1&#xb;0	&#x6;&#x5;+&#xe;&#x3;&#x2;&#x1a;&#x5;&#x0;0�&#x6;	*�H��&#xd;&#x1;&#x7;&#x1;��$�&#x4;�&#x1;�&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;&#xd;
&lt;plist version=&quot;1.0&quot;&gt;&#xd;
&lt;dict&gt;&#xd;
	&lt;key&gt;IMEI&lt;/key&gt;&#xd;
	&lt;string&gt;35 855105 122995 3&lt;/string&gt;&#xd;
	&lt;key&gt;PRODUCT&lt;/key&gt;&#xd;
	&lt;string&gt;iPhone5,4&lt;/string&gt;&#xd;
	&lt;key&gt;SERIAL&lt;/key&gt;&#xd;
	&lt;string&gt;${IOSdeviceid}&lt;/string&gt;&#xd;
	&lt;key&gt;UDID&lt;/key&gt;&#xd;
	&lt;string&gt;${uvalue}&lt;/string&gt;&#xd;
	&lt;key&gt;VERSION&lt;/key&gt;&#xd;
	&lt;string&gt;11B511&lt;/string&gt;&#xd;
&lt;/dict&gt;&#xd;
&lt;/plist&gt;&#xd;
&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;��&#x5;&#x13;0�&#x5;&#xf;0�&#x3;��&#x3;&#x2;&#x1;&#x2;&#x2;&#xd;
N�L�&#x0;&#x0;&#x0;&#x0;AB0&#xd;&#x6;	*�H��&#xd;&#x1;&#x1;&#x5;&#x5;&#x0;0A1&#x13;0&#x11;&#x6;&#xd;
	�&amp;���,d&#x1;&#x19;&#x16;&#x3;COM1&#x15;0&#x13;&#x6;&#xd;
	�&amp;���,d&#x1;&#x19;&#x16;&#x5;QAMDM1&#x13;0&#x11;&#x6;&#x3;U&#x4;&#x3;&#x13;&#xd;
QAMDM-SCEP0&#x1e;&#x17;&#xd;140827094505Z&#x17;&#xd;160826094505Z0&#x15;1&#x13;0&#x11;&#x6;&#x3;U&#x4;&#x3;&#x13;&#xd;
QAMDM-SCEP0�&#x1;&quot;0&#xd;&#x6;	*�H��&#xd;&#x1;&#x1;&#x1;&#x5;&#x0;&#x3;�&#x1;&#xf;&#x0;0�&#x1;&#xd;
&#x2;�&#x1;&#x1;&#x0;�^Kbd&#xe;&#x15;R\�&#x12;���NH�h�_��&#x7;ucp�9�&#x1;i&#x14;�L��-��_���~����F�ly�7�(��&#x15;&quot;^�I�&#x3;&#xd;
B�X�ƶ��DK*�&#xb;��gN�͓ͼ?]��A5�VZ&#x19;���d&#x1a;��,&#x19;�j&#x18;?glU9���TQ&#x7;�8�&#xf;���W��6e&#x61d;�ͫcV�&#x4;Sm����@H��EёOv���fֆ&quot;�&#x18;�Y&#x18;W&#x1c;!��K��x�p�}*y&#x3;&#xc;ι�7�d���&#xb;��D�&#xc;����&#xf;¬�r#(����V�&#x1e;������/r&#x1e;����&#x2;&#x13;&#x19;	*8��ITu]��T&#x10;���&#x2;&#x3;&#x1;&#x0;&#x1;��&#x2;30�&#x2;/0&#x1d;&#x6;&#x3;U&#x1d;&#xe;&#x4;&#x16;&#x4;&#x14;6��|U �]��&#x0;�&#x1b;A}&#x1;&#x8;�}&#x7;0&#x1f;&#x6;&#x3;U&#x1d;#&#x4;&#x18;0&#x16;�&#x14;�����3&#x0;0.����&#x1b;?\n&#x19;DF0��&#x6;&#x3;U&#x1d;&#x1f;&#x4;��0��0�����������ldap:///CN=QAMDM-SCEP,CN=QAMDM-SCEP,CN=CDP,CN=Public%20Key%20Services,CN=Services,CN=Configuration,DC=QAMDM,DC=COM?certificateRevocationList?base?objectClass=cRLDistributionPoint0��&#x6;&#x8;+&#x6;&#x1;&#x5;&#x5;&#x7;&#x1;&#x1;&#x4;��0��0��&#x6;&#x8;+&#x6;&#x1;&#x5;&#x5;&#x7;0&#x2;���ldap:///CN=QAMDM-SCEP,CN=AIA,CN=Public%20Key%20Services,CN=Services,CN=Configuration,DC=QAMDM,DC=COM?cACertificate?base?objectClass=certificationAuthority0?&#x6;	+&#x6;&#x1;&#x4;&#x1;�7&#x14;&#x2;&#x4;2&#x1e;0&#x0;I&#x0;P&#x0;S&#x0;E&#x0;C&#x0;I&#x0;n&#x0;t&#x0;e&#x0;r&#x0;m&#x0;e&#x0;d&#x0;i&#x0;a&#x0;t&#x0;e&#x0;O&#x0;f&#x0;f&#x0;l&#x0;i&#x0;n&#x0;e0&#xe;&#x6;&#x3;U&#x1d;&#xf;&#x1;&#x1;�&#x4;&#x4;&#x3;&#x2;&#x5;�0&#x13;&#x6;&#x3;U&#x1d;%&#x4;&#xc;0&#xd;
&#x6;&#x8;+&#x6;&#x1;&#x5;&#x5;&#x8;&#x2;&#x2;0&#xd;&#x6;	*�H��&#xd;&#x1;&#x1;&#x5;&#x5;&#x0;&#x3;�&#x1;&#x1;&#x0; �&#x11;R&#x6;}&#x2;�Q{s�=p�?�5J�0j�n����&amp;Ѿ�&#x16;��&#x10;�;*&#x8;&#x0;I��6Z&#x1f;�2&#x1d;��	ΨAfį�f&#xd;b&#x7;�=ߨ�mZj�@=�&#x1d; &#x17; ŉv�!R,��_S�~���4�}�wz�C&#x8;ߚJ�&#x1b;��&#xf;��b,�&#x17;	&quot;�/]\q�Emf&#x15;4�ф&#x19; /˦&#x1b;&apos;�ٞI.&#xf;��^���A&#x15;�&#x15;d&#x6;��{��3&#x6;]ƨ�9𙄝_�Ӷ\|͐�.�#�9~��&amp;���j^��&#xc;A=�0�&#x17;2.�&#xf;I�hc�9̈́�&#x7;Nj/�J9Q�A&#x3;z�&#x14;u&#x1d;aթ%eƄ�&#x8;&#x15;�&#x1b;l1�&#x1;�0�&#x1;�&#x2;&#x1;&#x1;0O0A1&#x13;0&#x11;&#x6;&#xd;
	�&amp;���,d&#x1;&#x19;&#x16;&#x3;COM1&#x15;0&#x13;&#x6;&#xd;
	�&amp;���,d&#x1;&#x19;&#x16;&#x5;QAMDM1&#x13;0&#x11;&#x6;&#x3;U&#x4;&#x3;&#x13;&#xd;
QAMDM-SCEP&#x2;&#xd;
N�L�&#x0;&#x0;&#x0;&#x0;AB0	&#x6;&#x5;+&#xe;&#x3;&#x2;&#x1a;&#x5;&#x0;�]0&#x18;&#x6;	*�H��&#xd;&#x1;	&#x3;1&#xb;&#x6;	*�H��&#xd;&#x1;&#x7;&#x1;0&#x1c;&#x6;	*�H��&#xd;&#x1;	&#x5;1&#xf;&#x17;&#xd;140827095335Z0#&#x6;	*�H��&#xd;&#x1;	&#x4;1&#x16;&#x4;&#x14;f��&#x14;�a ��&#x1b;�|�n&#x1e;e&#x4;�n�0&#xd;&#x6;	*�H��&#xd;&#x1;&#x1;&#x1;&#x5;&#x0;&#x4;�&#x1;&#x0;7�b�C�|�=&#x0;�����&#x18;��&#x8;�X��E���&#xe;��G�+a�.&#xf;-/�h��C�&lt;��&#xb;&#x18;��&#x10;	�&#xb;���o�r*&#x3;�7)&#xc;�C�@�p�&#x17;%���hvw���ܾA��\\:7y�RMv7�ϫ&#x0;ȵ��]�&#xc;6��1�&#x7f;4v��&#x11;�N����o�&#x1b;�&#xd;%����&#x1d;�&#xb;K��4�q&#x16;&#x3;d�h��̂\&#x1;&#x19;�&#x3;�6a&#xb;���&#x13;4&#x1d;㓜X�T���%�&#x18;Q&gt;�&#xf;,,�@b_{�̡&#x1e;vϽ`=�=�;�$�&#x7f;����i�&#x3;\Z�&#x17;&#x12;]�&#x2;w%B�*��x|���,&#x1a;Db}�&#xc;�W&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/MDM/Processing/IphoneProfileService.aspx?sid=${resultSid1}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/pkcs7-signature</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Profile/1.0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/certsrv/mscep/mscep.dll" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="operation" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">operation</stringProp>
                  <stringProp name="Argument.value">GetCACert</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">qamdm-scep</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">scep.qamdm.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/certsrv/mscep/mscep.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">profiled/1.0 CFNetwork/672.0.8 Darwin/14.0.0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/certsrv/mscep/mscep.dll" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="operation" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">operation</stringProp>
                  <stringProp name="Argument.value">GetCACaps</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">qamdm-scep</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">scep.qamdm.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/certsrv/mscep/mscep.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">profiled/1.0 CFNetwork/672.0.8 Darwin/14.0.0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/certsrv/mscep/mscep.dll" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="operation" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">operation</stringProp>
                  <stringProp name="Argument.value">PKIOperation</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">MIAGCSqGSIb3DQEHAqCAMIACAQExDjAMBggqhkiG9w0CBQUAMIAGCSqGSIb3DQEHAaCAJIAEggRdMIAGCSqGSIb3DQEHA6CAMIACAQAxggFrMIIBZwIBADBPMEExEzARBgoJkiaJk%2FIsZAEZFgNDT00xFTATBgoJkiaJk%2FIsZAEZFgVRQU1ETTETMBEGA1UEAxMKUUFNRE0tU0NFUAIKYQf4gQAAAAAAAzANBgkqhkiG9w0BAQEFAASCAQA%2BB1gcIc%2BX18rMborQpQJkduckfapoNVUtjj65hfXRGrLFQVV7UziYaqUjQgq2DnIJ3sAM1ATN6I8gMzMN2cPMiRch5HkU2LFZw7RHkkugSRfxHGXCeUz7KYw684LtuzlreoDE5tlm%2BJz82KsZNdCzWzSSATIGzdBYpAOpc2df2ohgQunqJxdw8%2FkXYnr%2BkDAHrrimWnF%2FrkppgbcS2Y7xncCDnpAmb2V7iru2xsbqM%2FBuAqO5uf0CVP3tFm6EqAmZVKokg9D4Rv8%2FWTA%2FvYKv6vvgUUPniYPEIpkpUnVmCtA%2FLZbOoSwvhoc5mjPNWctY69eo8RZmySK%2FonRUybyWMIAGCSqGSIb3DQEHATARBgUrDgMCBwQILeujvP1gBw6ggASCAqDzOWeon6UPozGbZvlQj27SauFv77jNdqhALJtrn4vsm6rkUoQX0xVX9uxn4ZfKkz46m0mPNbQh%2FKXddo2XyohfR%2B88AYQjJWnPCEyJCTDGTQqoxqTN1qtiu%2BE2W1IDOeMgoarwjgWfiZiVX69%2BEfk%2BGYT2bW1tcUCKfG%2BCSIGICh4OYRaUlPoIgRzLJ60zobIJAaMqif0XzjW7Rh23rnF3miDe7xl%2Brmc6Arr%2Fc825uWTZKwR%2FinYKtppHhu%2FRO4Ya69sss0fBrIRPmUuvEMiCGoOss%2FrRWSZVe%2FwxGJ7pSI02SwYZupugGsLvcWkWD3bGzh%2F24gyM5ubIp%2BUdnQWl8RXnJvYCpu%2FrdNJGbA8ddnMbGfY1ynB1RZmVd8oybdqXNthiXtNMvb52hFPSQNpY8Q%2BHlDCJM%2BCqMl5w7u73jO%2FbiGU5B7%2BqQUEg17tyAxwwve9fA1tvQ2R2f7fxLKhn5BeY00ZTjZdNdZoaHR8CmG42BGLKyq6jyXoLYqQeX7fPdQprI2ZoRiU3iZCR7vAZsC8Vwz9izKj7Chc%2FX%2BfRbZmRx3f9no%2BN35pXzXYX9yuCYfGBKR%2BEzQWQx4cFZRwG2C0OvOVlLdqm4jnG0MQW8%2BFSx7qEtQzQt3s%2B7isi0WybpuwTb7tu5W9H1gSZS%2BNoTYt58Fybl8VKZMEO4pPC8AiqiXyYMgsli%2FvPJOb4%2B5ca%2Bgc8pRlXi5d9GICjEYnSMBmDp0Q%2BT5HDjKeJTo1hmYVjZQ3vZ0Wa0EbX%2BoJEMamxVIGu2dg7ZAB1SqWtk0o%2BNP0WC7iHCW%2Bp%2BjZBJx5luacqh1axgIP5dfrzbZO0Zudy%2FixEHFdINnxz%2FST2EpiNgjzZZu3HMUAJnRBzf5jgYASWxyiozrBevE5m8Az83ssECH6K5lO0eiWAAAAAAAAAAAAAAAAAAAAAAKCCAu8wggLrMIIB06ADAgECAgEBMA0GCSqGSIb3DQEBBQUAMC8xLTArBgNVBAMTJDdCRjFCQjdDLTJDQjEtNDA0RC04MkU0LTk0NTM2QTNFOTg5NDAeFw0xNDA4MjcwOTU0MDFaFw0xNTA4MjcwOTU0MDFaMC8xLTArBgNVBAMTJDdCRjFCQjdDLTJDQjEtNDA0RC04MkU0LTk0NTM2QTNFOTg5NDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMRUIy%2Bef%2FYGTdo7Uw1OHLnFxIOpUqL4KbzfgKZNSexwv4RkEV4DbT3dAZG64xMH6SG%2BC%2FN%2BcNAPFEdwDD09PC8aB0HPI%2B%2BIkqFDr5Yk055tyjqevA%2FTeVID1Fj2VH2S6Eurys%2F8UtAF8ERGTW4guB0uhZlB84xzWlwRSXjDQA5e8KmDAz7f9W1eDrNBtZf0sVzvnnHvm2tvDLlj84GvMRek5Kvozvmy6ooBRASJRYSAa6ARBJtPysMqBH32qQwLSFbQrdgd94XaBeVHKtjGGWd8gaQC5%2Fq5txoB5Yw47bqorgHSzm7nWcpeywbOqkyKbyKJDfrLkYt2hhlRvUIWrs8CAwEAAaMSMBAwDgYDVR0PAQH%2FBAQDAgWgMA0GCSqGSIb3DQEBBQUAA4IBAQCa9JiUkLyoW3%2FVNcD8W9lbQky%2BuovCjvXMYEf7vTqTp0vA3XKuoZVR6GlkrS9dpzxCWbqCZK%2BwMhNGvHYdVZKyh16mwyL7h7Eo92VaF4ZedbD8Yt24sCxQ5FlO76mPpEDpqvgdAYjFNSfnoVQ8o1RrLXpOedRsmMvqlNJ%2Ffk6ipPLnlAgraPWp5a%2F7uTN3tv0gUSIHezdoXE%2FtziV%2F7McEAmphbfmDQ1LGzDVyPDCKgnmr8FToR5cMp8hPqSH77Tq0TJ2yOdMRpbdac9nppdxGqbKuQs3xTTjgGF9WAbFBg1dkHG1KJb6j3AfflkYs1e5uOeMfygcn%2FUq33vtA5aJxMYICKjCCAiYCAQEwNDAvMS0wKwYDVQQDEyQ3QkYxQkI3Qy0yQ0IxLTQwNEQtODJFNC05NDUzNkEzRTk4OTQCAQEwDAYIKoZIhvcNAgUFAKCByTASBgpghkgBhvhFAQkCMQQTAjE5MBgGCSqGSIb3DQEJAzELBgkqhkiG9w0BBwEwHAYJKoZIhvcNAQkFMQ8XDTE0MDgyNzA5NTQwMlowHwYJKoZIhvcNAQkEMRIEEN6dxzDUcaQxuAC8upriU%2FwwIAYKYIZIAYb4RQEJBTESBBBrPSDFkhbwZFG1PpVjtl4mMDgGCmCGSAGG%2BEUBCQcxKhMoMjQxQTU3ODIwMDFGOTQ5NkNCNzdFOTU0NzBFRjBGMDU3RUU0NzMyMzANBgkqhkiG9w0BAQEFAASCAQAn6T0ElRMxrifX6rCTPo4tqn9crncUx3kNfHArP6Rn6g%2F53hT%2FIdgEpbWnAmozFVh6iNNpNqIuLfZfJD6svh12Stkbl8y%2FNU%2BnmSozNKBmpUtrpw1TNMsaBp4HH8h7Ye0ExdDvOVdKye7NpkMX0VFphKJPo%2F4t4SHCgfLOZuagOU4X0wjmNs0mlIIQ4xny2nUPBZ0aBZgGHtSqH2YhxUp8jfYc5LpQWhfnyS0saoQio8UFfZ6uRxO0QPz8x2n%2F8Z49ZSM%2BWgA6HsYilMNJRDtFHjJyCtxbjiScQfzBfKQZulmtOTjpCA6K00SvNjabB%2FsUa82eZpvRiaEM1jqruradAAAAAAAA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">scep.qamdm.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/certsrv/mscep/mscep.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-pki-message</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">profiled/1.0 CFNetwork/672.0.8 Darwin/14.0.0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/MDM/Processing/IphoneProfileService.aspx" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;&#xd;
&lt;plist version=&quot;1.0&quot;&gt;&#xd;
&lt;dict&gt;&#xd;
	&lt;key&gt;MessageType&lt;/key&gt;&#xd;
	&lt;string&gt;Authenticate&lt;/string&gt;&#xd;
	&lt;key&gt;Topic&lt;/key&gt;&#xd;
	&lt;string&gt;com.apple.mgmt.com.tangoe.deviceclient&lt;/string&gt;&#xd;
	&lt;key&gt;UDID&lt;/key&gt;&#xd;
	&lt;string&gt;${uvalue}&lt;/string&gt;&#xd;
&lt;/dict&gt;&#xd;
&lt;/plist&gt;&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/MDM/Processing/IphoneProfileService.aspx</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-apple-aspen-mdm-checkin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">MDM/1.0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/MDM/Processing/IphoneProfileService.aspx" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;&#xd;
&lt;plist version=&quot;1.0&quot;&gt;&#xd;
&lt;dict&gt;&#xd;
	&lt;key&gt;MessageType&lt;/key&gt;&#xd;
	&lt;string&gt;TokenUpdate&lt;/string&gt;&#xd;
	&lt;key&gt;PushMagic&lt;/key&gt;&#xd;
	&lt;string&gt;E8C15EA3-2833-4D77-B390-90B8E3B7263B&lt;/string&gt;&#xd;
	&lt;key&gt;Token&lt;/key&gt;&#xd;
	&lt;data&gt;&#xd;
	hXHt7YnJXOUr0fBDj51G3hpwlvrjFA53U6RLFRKIBlE=&#xd;
	&lt;/data&gt;&#xd;
	&lt;key&gt;Topic&lt;/key&gt;&#xd;
	&lt;string&gt;com.apple.mgmt.com.tangoe.deviceclient&lt;/string&gt;&#xd;
	&lt;key&gt;UDID&lt;/key&gt;&#xd;
	&lt;string&gt;${uvalue}&lt;/string&gt;&#xd;
	&lt;key&gt;UnlockToken&lt;/key&gt;&#xd;
	&lt;data&gt;&#xd;
	REFUQQAABORWRVJTAAAABAAAAARUWVBFAAAABAAAAAJVVUlEAAAAEMf6fGasGkIysHzE&#xd;
	GbqiZhFITUNLAAAAKL47z6gNr5rScFpaEEBRTjHE3tlc7zAZFhKn0qmhokQ7ghBktXF/&#xd;
	GF5XUkFQAAAABAAAAAFTQUxUAAAAFNyn4ZXScwdFEKNsvqM2ITPZ8dkvSVRFUgAAAAQA&#xd;
	AMNQVVVJRAAAABA563YG4PVPN7VxjQ+dYYBMQ0xBUwAAAAQAAAABV1JBUAAAAAQAAAAD&#xd;
	S1RZUAAAAAQAAAAAV1BLWQAAACgTaBsc1lQpODiX1tFnpAF2rJfYySk75I25lfueqRUH&#xd;
	H/eWyqTENmV5VVVJRAAAABAng0Wi4SNMnrwX0S2haF3HQ0xBUwAAAAQAAAACV1JBUAAA&#xd;
	AAQAAAADS1RZUAAAAAQAAAABV1BLWQAAACjno5HAiqpZL525PYiVcA0eXbLEiDn3sc3y&#xd;
	RPsTdzuH9ELwXe65+pEKUEJLWQAAACDaX3HHVbfi3OUkU1F+T3dCNxXQ5mQ7Ov3990nG&#xd;
	H3MSDFVVSUQAAAAQw8bYgYiNSWi9yhwhTRQdwENMQVMAAAAEAAAAA1dSQVAAAAAEAAAA&#xd;
	A0tUWVAAAAAEAAAAAFdQS1kAAAAo47MjtnJDHr7csD/3bszHm9ztYy+qz7gEppQptrt4&#xd;
	ljxUpg0NvStTKFVVSUQAAAAQFkztF9d4SjyhqqsLSEEFO0NMQVMAAAAEAAAABVdSQVAA&#xd;
	AAAEAAAAA0tUWVAAAAAEAAAAAFdQS1kAAAAoghsewrdZAzZxe36R54iEuPCtHqmJPOil&#xd;
	FjqVo99VLODUD85S1vdt9FVVSUQAAAAQIZwhXEIyR4uZ++6StPiybUNMQVMAAAAEAAAA&#xd;
	BldSQVAAAAAEAAAAA0tUWVAAAAAEAAAAAFdQS1kAAAAoYfYWQ1xhLAqXIJdq1GyOfXuB&#xd;
	b4j0SZTE4OneSnSCshf4k4NWdI2a+FVVSUQAAAAQyoF5gmRBRFWwqifgtHTrx0NMQVMA&#xd;
	AAAEAAAAB1dSQVAAAAAEAAAAA0tUWVAAAAAEAAAAAFdQS1kAAAAo2XbTge5o3ntsLz6E&#xd;
	jz2h7WBmYN6Mrp0uNGkNVIrFGchb8NDoD81RqFVVSUQAAAAQKYAPe3U1TAq5CdwEmHzM&#xd;
	/UNMQVMAAAAEAAAACFdSQVAAAAAEAAAAAUtUWVAAAAAEAAAAAFdQS1kAAAAgRfVT2Ghc&#xd;
	hjPI6hFXxxNzS/8GO6dcyiGEC6Lscz8aVItVVUlEAAAAEACwBgrWD0lZtrOdYY6KBrND&#xd;
	TEFTAAAABAAAAAlXUkFQAAAABAAAAANLVFlQAAAABAAAAABXUEtZAAAAKMx5JhrlsEKr&#xd;
	Jy1FDSNgqAKVs3CA+vP6LDDDnr3y9gIP66+sN9aekuNVVUlEAAAAEEIdspgBSEb6qlth&#xd;
	OO1IkxZDTEFTAAAABAAAAApXUkFQAAAABAAAAANLVFlQAAAABAAAAABXUEtZAAAAKNiG&#xd;
	59yYXBrbzIaGcPD7Jc/MUgPVpNtj1RuHJfmRJepMR12eRDdUbnBVVUlEAAAAEOLIGrXs&#xd;
	ZEEig0ZJqJ0yH05DTEFTAAAABAAAAAtXUkFQAAAABAAAAAFLVFlQAAAABAAAAABXUEtZ&#xd;
	AAAAIAkkRtY8YnzF7YIHX/gSZn5I+CfHnU1h1iGwbWHcFEXiU0lHTgAAABQ0o49mIjOl&#xd;
	sT/1mze619EoRijjgA==&#xd;
	&lt;/data&gt;&#xd;
&lt;/dict&gt;&#xd;
&lt;/plist&gt;&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/MDM/Processing/IphoneProfileService.aspx</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-apple-aspen-mdm-checkin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">MDM/1.0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/MDM/Processing/IphoneProfileService.aspx" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;&#xd;
&lt;plist version=&quot;1.0&quot;&gt;&#xd;
&lt;dict&gt;&#xd;
	&lt;key&gt;Status&lt;/key&gt;&#xd;
	&lt;string&gt;Idle&lt;/string&gt;&#xd;
	&lt;key&gt;UDID&lt;/key&gt;&#xd;
	&lt;string&gt;${uvalue}&lt;/string&gt;&#xd;
&lt;/dict&gt;&#xd;
&lt;/plist&gt;&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/MDM/Processing/IphoneProfileService.aspx</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-apple-aspen-mdm</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">MDM/1.0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="CommandUUID1" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">CommandUUID1</stringProp>
              <stringProp name="RegexExtractor.regex">[0-9]{2,4}</stringProp>
              <stringProp name="RegexExtractor.template">$0$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">[1][0]</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/MDM/Processing/IphoneProfileService.aspx - SecurityInfo" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;&#xd;
&lt;plist version=&quot;1.0&quot;&gt;&#xd;
&lt;dict&gt;&#xd;
	&lt;key&gt;CommandUUID&lt;/key&gt;&#xd;
	&lt;string&gt;${CommandUUID1}&lt;/string&gt;&#xd;
	&lt;key&gt;SecurityInfo&lt;/key&gt;&#xd;
	&lt;dict&gt;&#xd;
		&lt;key&gt;HardwareEncryptionCaps&lt;/key&gt;&#xd;
		&lt;integer&gt;3&lt;/integer&gt;&#xd;
		&lt;key&gt;PasscodeCompliant&lt;/key&gt;&#xd;
		&lt;true/&gt;&#xd;
		&lt;key&gt;PasscodeCompliantWithProfiles&lt;/key&gt;&#xd;
		&lt;true/&gt;&#xd;
		&lt;key&gt;PasscodePresent&lt;/key&gt;&#xd;
		&lt;false/&gt;&#xd;
	&lt;/dict&gt;&#xd;
	&lt;key&gt;Status&lt;/key&gt;&#xd;
	&lt;string&gt;Acknowledged&lt;/string&gt;&#xd;
	&lt;key&gt;UDID&lt;/key&gt;&#xd;
	&lt;string&gt;${uvalue}&lt;/string&gt;&#xd;
&lt;/dict&gt;&#xd;
&lt;/plist&gt;&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/MDM/Processing/IphoneProfileService.aspx</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-apple-aspen-mdm</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">MDM/1.0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="CommandUUID2" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">CommandUUID2</stringProp>
              <stringProp name="RegexExtractor.regex">[0-9]{2,4}</stringProp>
              <stringProp name="RegexExtractor.template">$0$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/MDM/Processing/IphoneProfileService.aspx - QueryResponses" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;&#xd;
&lt;plist version=&quot;1.0&quot;&gt;&#xd;
&lt;dict&gt;&#xd;
	&lt;key&gt;CommandUUID&lt;/key&gt;&#xd;
	&lt;string&gt;${CommandUUID2}&lt;/string&gt;&#xd;
	&lt;key&gt;QueryResponses&lt;/key&gt;&#xd;
	&lt;dict&gt;&#xd;
		&lt;key&gt;AvailableDeviceCapacity&lt;/key&gt;&#xd;
		&lt;real&gt;11.033157348632812&lt;/real&gt;&#xd;
		&lt;key&gt;BatteryLevel&lt;/key&gt;&#xd;
		&lt;real&gt;0.40000000596046448&lt;/real&gt;&#xd;
		&lt;key&gt;BuildVersion&lt;/key&gt;&#xd;
		&lt;string&gt;11B511&lt;/string&gt;&#xd;
		&lt;key&gt;CarrierSettingsVersion&lt;/key&gt;&#xd;
		&lt;string&gt;15.6&lt;/string&gt;&#xd;
		&lt;key&gt;CellularTechnology&lt;/key&gt;&#xd;
		&lt;integer&gt;1&lt;/integer&gt;&#xd;
		&lt;key&gt;CurrentCarrierNetwork&lt;/key&gt;&#xd;
		&lt;string&gt;airtel&lt;/string&gt;&#xd;
		&lt;key&gt;CurrentMCC&lt;/key&gt;&#xd;
		&lt;string&gt;404&lt;/string&gt;&#xd;
		&lt;key&gt;CurrentMNC&lt;/key&gt;&#xd;
		&lt;string&gt;45&lt;/string&gt;&#xd;
		&lt;key&gt;DataRoamingEnabled&lt;/key&gt;&#xd;
		&lt;false/&gt;&#xd;
		&lt;key&gt;DeviceCapacity&lt;/key&gt;&#xd;
		&lt;real&gt;13.31182861328125&lt;/real&gt;&#xd;
		&lt;key&gt;DeviceName&lt;/key&gt;&#xd;
		&lt;string&gt;Kishor&apos;s iPhone&lt;/string&gt;&#xd;
		&lt;key&gt;ICCID&lt;/key&gt;&#xd;
		&lt;string&gt;8991 4500 0502 0887 0788&lt;/string&gt;&#xd;
		&lt;key&gt;IMEI&lt;/key&gt;&#xd;
		&lt;string&gt;35 855105 122995 3&lt;/string&gt;&#xd;
		&lt;key&gt;IsDeviceLocatorServiceEnabled&lt;/key&gt;&#xd;
		&lt;true/&gt;&#xd;
		&lt;key&gt;IsDoNotDisturbInEffect&lt;/key&gt;&#xd;
		&lt;false/&gt;&#xd;
		&lt;key&gt;IsRoaming&lt;/key&gt;&#xd;
		&lt;false/&gt;&#xd;
		&lt;key&gt;OSVersion&lt;/key&gt;&#xd;
		&lt;string&gt;7.0.3&lt;/string&gt;&#xd;
		&lt;key&gt;PersonalHotspotEnabled&lt;/key&gt;&#xd;
		&lt;false/&gt;&#xd;
		&lt;key&gt;PhoneNumber&lt;/key&gt;&#xd;
		&lt;string&gt;+919632786195&lt;/string&gt;&#xd;
		&lt;key&gt;SerialNumber&lt;/key&gt;&#xd;
		&lt;string&gt;${IOSdeviceid}&lt;/string&gt;&#xd;
		&lt;key&gt;SubscriberCarrierNetwork&lt;/key&gt;&#xd;
		&lt;string&gt;AirTel&lt;/string&gt;&#xd;
		&lt;key&gt;SubscriberMCC&lt;/key&gt;&#xd;
		&lt;string&gt;404&lt;/string&gt;&#xd;
		&lt;key&gt;SubscriberMNC&lt;/key&gt;&#xd;
		&lt;string&gt;45&lt;/string&gt;&#xd;
		&lt;key&gt;WiFiMAC&lt;/key&gt;&#xd;
		&lt;string&gt;f0:c1:f1:19:96:bb&lt;/string&gt;&#xd;
	&lt;/dict&gt;&#xd;
	&lt;key&gt;Status&lt;/key&gt;&#xd;
	&lt;string&gt;Acknowledged&lt;/string&gt;&#xd;
	&lt;key&gt;UDID&lt;/key&gt;&#xd;
	&lt;string&gt;${uvalue}&lt;/string&gt;&#xd;
&lt;/dict&gt;&#xd;
&lt;/plist&gt;&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/MDM/Processing/IphoneProfileService.aspx</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-apple-aspen-mdm</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">MDM/1.0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="CommandUUID3" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">CommandUUID3</stringProp>
              <stringProp name="RegexExtractor.regex">[0-9]{2,4}</stringProp>
              <stringProp name="RegexExtractor.template">$0$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/MDM/Processing/IphoneProfileService.aspx - InstalledApplicationList" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;&#xd;
&lt;plist version=&quot;1.0&quot;&gt;&#xd;
&lt;dict&gt;&#xd;
	&lt;key&gt;CommandUUID&lt;/key&gt;&#xd;
	&lt;string&gt;${CommandUUID3}&lt;/string&gt;&#xd;
	&lt;key&gt;InstalledApplicationList&lt;/key&gt;&#xd;
	&lt;array&gt;&#xd;
		&lt;dict&gt;&#xd;
			&lt;key&gt;BundleSize&lt;/key&gt;&#xd;
			&lt;integer&gt;8769536&lt;/integer&gt;&#xd;
			&lt;key&gt;DynamicSize&lt;/key&gt;&#xd;
			&lt;integer&gt;2011136&lt;/integer&gt;&#xd;
			&lt;key&gt;Identifier&lt;/key&gt;&#xd;
			&lt;string&gt;com.dci.indiatoday&lt;/string&gt;&#xd;
			&lt;key&gt;Name&lt;/key&gt;&#xd;
			&lt;string&gt;India Today&lt;/string&gt;&#xd;
			&lt;key&gt;ShortVersion&lt;/key&gt;&#xd;
			&lt;string&gt;3.1.4&lt;/string&gt;&#xd;
			&lt;key&gt;Version&lt;/key&gt;&#xd;
			&lt;string&gt;3.1.4&lt;/string&gt;&#xd;
		&lt;/dict&gt;&#xd;
		&lt;dict&gt;&#xd;
			&lt;key&gt;BundleSize&lt;/key&gt;&#xd;
			&lt;integer&gt;7106560&lt;/integer&gt;&#xd;
			&lt;key&gt;DynamicSize&lt;/key&gt;&#xd;
			&lt;integer&gt;4317184&lt;/integer&gt;&#xd;
			&lt;key&gt;Identifier&lt;/key&gt;&#xd;
			&lt;string&gt;com.agilitee.intouch&lt;/string&gt;&#xd;
			&lt;key&gt;Name&lt;/key&gt;&#xd;
			&lt;string&gt;inTouch&lt;/string&gt;&#xd;
			&lt;key&gt;ShortVersion&lt;/key&gt;&#xd;
			&lt;string&gt;0.9.0.1&lt;/string&gt;&#xd;
			&lt;key&gt;Version&lt;/key&gt;&#xd;
			&lt;string&gt;0.9.1.10&lt;/string&gt;&#xd;
		&lt;/dict&gt;&#xd;
		&lt;dict&gt;&#xd;
			&lt;key&gt;BundleSize&lt;/key&gt;&#xd;
			&lt;integer&gt;2600960&lt;/integer&gt;&#xd;
			&lt;key&gt;DynamicSize&lt;/key&gt;&#xd;
			&lt;integer&gt;8916992&lt;/integer&gt;&#xd;
			&lt;key&gt;Identifier&lt;/key&gt;&#xd;
			&lt;string&gt;com.tangoe.iphone.dev&lt;/string&gt;&#xd;
			&lt;key&gt;Name&lt;/key&gt;&#xd;
			&lt;string&gt;Tangoe&lt;/string&gt;&#xd;
			&lt;key&gt;ShortVersion&lt;/key&gt;&#xd;
			&lt;string&gt;13.3.3&lt;/string&gt;&#xd;
			&lt;key&gt;Version&lt;/key&gt;&#xd;
			&lt;string&gt;1120&lt;/string&gt;&#xd;
		&lt;/dict&gt;&#xd;
	&lt;/array&gt;&#xd;
	&lt;key&gt;Status&lt;/key&gt;&#xd;
	&lt;string&gt;Acknowledged&lt;/string&gt;&#xd;
	&lt;key&gt;UDID&lt;/key&gt;&#xd;
	&lt;string&gt;${uvalue}&lt;/string&gt;&#xd;
&lt;/dict&gt;&#xd;
&lt;/plist&gt;&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/MDM/Processing/IphoneProfileService.aspx</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-apple-aspen-mdm</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">MDM/1.0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="CommandUUID4" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">CommandUUID4</stringProp>
              <stringProp name="RegexExtractor.regex">[0-9]{2,4}</stringProp>
              <stringProp name="RegexExtractor.template">$0$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/MDM/Processing/IphoneProfileService.aspx - ManagedApplicationList" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;&#xd;
&lt;plist version=&quot;1.0&quot;&gt;&#xd;
&lt;dict&gt;&#xd;
	&lt;key&gt;CommandUUID&lt;/key&gt;&#xd;
	&lt;string&gt;${CommandUUID4}&lt;/string&gt;&#xd;
	&lt;key&gt;ManagedApplicationList&lt;/key&gt;&#xd;
	&lt;dict/&gt;&#xd;
	&lt;key&gt;Status&lt;/key&gt;&#xd;
	&lt;string&gt;Acknowledged&lt;/string&gt;&#xd;
	&lt;key&gt;UDID&lt;/key&gt;&#xd;
	&lt;string&gt;${uvalue}&lt;/string&gt;&#xd;
&lt;/dict&gt;&#xd;
&lt;/plist&gt;&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/MDM/Processing/IphoneProfileService.aspx</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-apple-aspen-mdm</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">MDM/1.0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="CommandUUID5" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">CommandUUID5</stringProp>
              <stringProp name="RegexExtractor.regex">[0-9]{2,4}</stringProp>
              <stringProp name="RegexExtractor.template">$0$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/MDM/Processing/IphoneProfileService.aspx - ProfileList" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;&#xd;
&lt;plist version=&quot;1.0&quot;&gt;&#xd;
&lt;dict&gt;&#xd;
	&lt;key&gt;CommandUUID&lt;/key&gt;&#xd;
	&lt;string&gt;${CommandUUID5}&lt;/string&gt;&#xd;
	&lt;key&gt;ProfileList&lt;/key&gt;&#xd;
	&lt;array&gt;&#xd;
		&lt;dict&gt;&#xd;
			&lt;key&gt;HasRemovalPasscode&lt;/key&gt;&#xd;
			&lt;false/&gt;&#xd;
			&lt;key&gt;IsEncrypted&lt;/key&gt;&#xd;
			&lt;false/&gt;&#xd;
			&lt;key&gt;PayloadContent&lt;/key&gt;&#xd;
			&lt;array&gt;&#xd;
				&lt;dict&gt;&#xd;
					&lt;key&gt;PayloadDisplayName&lt;/key&gt;&#xd;
					&lt;string&gt;_ DO NOT INSTALL unless this is your certificate (JMeter root CA)&lt;/string&gt;&#xd;
					&lt;key&gt;PayloadIdentifier&lt;/key&gt;&#xd;
					&lt;string&gt;ecc9e66ea42f69ef29acf5deb10e40eee873b5fca&lt;/string&gt;&#xd;
					&lt;key&gt;PayloadType&lt;/key&gt;&#xd;
					&lt;string&gt;com.apple.security.pem&lt;/string&gt;&#xd;
					&lt;key&gt;PayloadVersion&lt;/key&gt;&#xd;
					&lt;integer&gt;1&lt;/integer&gt;&#xd;
				&lt;/dict&gt;&#xd;
			&lt;/array&gt;&#xd;
			&lt;key&gt;PayloadDisplayName&lt;/key&gt;&#xd;
			&lt;string&gt;_ DO NOT INSTALL unless this is your certificate (JMeter root CA)&lt;/string&gt;&#xd;
			&lt;key&gt;PayloadIdentifier&lt;/key&gt;&#xd;
			&lt;string&gt;ecc9e66ea42f69ef29acf5deb10e40eee873b5fca&lt;/string&gt;&#xd;
			&lt;key&gt;PayloadRemovalDisallowed&lt;/key&gt;&#xd;
			&lt;false/&gt;&#xd;
			&lt;key&gt;PayloadUUID&lt;/key&gt;&#xd;
			&lt;string&gt;4119EA5B-107B-4B29-AF15-A200DD39CB59&lt;/string&gt;&#xd;
			&lt;key&gt;PayloadVersion&lt;/key&gt;&#xd;
			&lt;integer&gt;1&lt;/integer&gt;&#xd;
			&lt;key&gt;SignerCertificates&lt;/key&gt;&#xd;
			&lt;array&gt;&#xd;
				&lt;data&gt;&#xd;
				MIIDoDCCAoigAwIBAgIEWYA+cDANBgkqhkiG9w0BAQsF&#xd;
				ADB4MQswCQYDVQQGEwJVUzEdMBsGA1UECxMUVXNlcm5h&#xd;
				bWU6IG5pc2NoaXRoLnIxSjBIBgNVBAMMQV8gRE8gTk9U&#xd;
				IElOU1RBTEwgdW5sZXNzIHRoaXMgaXMgeW91ciBjZXJ0&#xd;
				aWZpY2F0ZSAoSk1ldGVyIHJvb3QgQ0EpMB4XDTE0MDgy&#xd;
				NzA3MTQwMFoXDTE0MDkwMzA3MTQwMFoweDELMAkGA1UE&#xd;
				BhMCVVMxHTAbBgNVBAsTFFVzZXJuYW1lOiBuaXNjaGl0&#xd;
				aC5yMUowSAYDVQQDDEFfIERPIE5PVCBJTlNUQUxMIHVu&#xd;
				bGVzcyB0aGlzIGlzIHlvdXIgY2VydGlmaWNhdGUgKEpN&#xd;
				ZXRlciByb290IENBKTCCASIwDQYJKoZIhvcNAQEBBQAD&#xd;
				ggEPADCCAQoCggEBAMYUaINpFfMv9Kdo9Uus5y74Vqxq&#xd;
				9IGJa2cmyKIlxfYr6scdWCbtd6vAu2CoQ6My1NGlPxoT&#xd;
				emc/yaZUjRKSzpc/aTLyEgoujhLCIZ14RVn+xzt8su+u&#xd;
				SQnxWbkNxs8D1HxWFdZXJeQYyKF3N6MCTE4z+bJZmvgN&#xd;
				JO7kKpfNPxYzEhAHWGh5jdFiOyeTREGH3kwCD0QnILfV&#xd;
				fK/y4vvDHmS8P3l3gXNAy5muaY1lPUFuYAHaUEKbWAAz&#xd;
				CJJc06yRCRyLS2qrK+u29v1ZWjw7pWuwgiE9+uO5evxy&#xd;
				QlMh9jHdVGnSyHOaY4RgIWDkwnGkU/moHVqwrTfXgv/G&#xd;
				qDL4SesCAwEAAaMyMDAwDwYDVR0TAQH/BAUwAwEB/zAd&#xd;
				BgNVHQ4EFgQUGu5LKRsK07tiTQ3whKynw6tIwXYwDQYJ&#xd;
				KoZIhvcNAQELBQADggEBAAUjVant2vRvFb/vawL5utb/&#xd;
				Va+/RNf4l5Bk7YghiSE4FBNg0M4UL/1ecPGbMWYwygyR&#xd;
				lt5govxgznFKOKUknmN+rtyF+sMEjCdoAhZwbMsxmjvR&#xd;
				BjWQAxZHpCW31P4w07730sHG1ejOwzNyql9fvOLIsFe2&#xd;
				xnWrNn/p5M+S5OulaOIg0Z8H4m9+q6mlWGEBZ5rRriZK&#xd;
				m5ipKxJfMNFAPsyYemZGyL9KUmXARKXDIb9Sdpw8ezWQ&#xd;
				vi0mlKBwfkR+Jrl5Lyw/er8X09lurL1lF0aq9gKMJAa1&#xd;
				2kWJY8u+7yqOwLVq5a6IZlSsl3FasH++3zyowb7VEFa1&#xd;
				D2AlbG/438U=&#xd;
				&lt;/data&gt;&#xd;
			&lt;/array&gt;&#xd;
		&lt;/dict&gt;&#xd;
		&lt;dict&gt;&#xd;
			&lt;key&gt;HasRemovalPasscode&lt;/key&gt;&#xd;
			&lt;false/&gt;&#xd;
			&lt;key&gt;IsEncrypted&lt;/key&gt;&#xd;
			&lt;false/&gt;&#xd;
			&lt;key&gt;PayloadContent&lt;/key&gt;&#xd;
			&lt;array&gt;&#xd;
				&lt;dict&gt;&#xd;
					&lt;key&gt;PayloadDescription&lt;/key&gt;&#xd;
					&lt;string&gt;ConfiguresSCEP&lt;/string&gt;&#xd;
					&lt;key&gt;PayloadIdentifier&lt;/key&gt;&#xd;
					&lt;string&gt;com.mdm.profile.scep.SCEP&lt;/string&gt;&#xd;
					&lt;key&gt;PayloadOrganization&lt;/key&gt;&#xd;
					&lt;string&gt;Tangoe&lt;/string&gt;&#xd;
					&lt;key&gt;PayloadType&lt;/key&gt;&#xd;
					&lt;string&gt;com.apple.security.scep&lt;/string&gt;&#xd;
					&lt;key&gt;PayloadVersion&lt;/key&gt;&#xd;
					&lt;integer&gt;1&lt;/integer&gt;&#xd;
				&lt;/dict&gt;&#xd;
				&lt;dict&gt;&#xd;
					&lt;key&gt;PayloadDescription&lt;/key&gt;&#xd;
					&lt;string&gt;MDM Payload&lt;/string&gt;&#xd;
					&lt;key&gt;PayloadDisplayName&lt;/key&gt;&#xd;
					&lt;string&gt;MDM Settings&lt;/string&gt;&#xd;
					&lt;key&gt;PayloadIdentifier&lt;/key&gt;&#xd;
					&lt;string&gt;com.mdm.profile.base.mdm&lt;/string&gt;&#xd;
					&lt;key&gt;PayloadOrganization&lt;/key&gt;&#xd;
					&lt;string&gt;Tangoe&lt;/string&gt;&#xd;
					&lt;key&gt;PayloadType&lt;/key&gt;&#xd;
					&lt;string&gt;com.apple.mdm&lt;/string&gt;&#xd;
					&lt;key&gt;PayloadVersion&lt;/key&gt;&#xd;
					&lt;integer&gt;1&lt;/integer&gt;&#xd;
				&lt;/dict&gt;&#xd;
			&lt;/array&gt;&#xd;
			&lt;key&gt;PayloadDescription&lt;/key&gt;&#xd;
			&lt;string&gt;&lt;/string&gt;&#xd;
			&lt;key&gt;PayloadDisplayName&lt;/key&gt;&#xd;
			&lt;string&gt;iOSBaseProfile&lt;/string&gt;&#xd;
			&lt;key&gt;PayloadIdentifier&lt;/key&gt;&#xd;
			&lt;string&gt;com.mdm.profile.base&lt;/string&gt;&#xd;
			&lt;key&gt;PayloadOrganization&lt;/key&gt;&#xd;
			&lt;string&gt;Tangoe&lt;/string&gt;&#xd;
			&lt;key&gt;PayloadRemovalDisallowed&lt;/key&gt;&#xd;
			&lt;false/&gt;&#xd;
			&lt;key&gt;PayloadUUID&lt;/key&gt;&#xd;
			&lt;string&gt;39d13ba3-f973-4c27-be0c-69a4dbc99fa3&lt;/string&gt;&#xd;
			&lt;key&gt;PayloadVersion&lt;/key&gt;&#xd;
			&lt;integer&gt;1&lt;/integer&gt;&#xd;
		&lt;/dict&gt;&#xd;
	&lt;/array&gt;&#xd;
	&lt;key&gt;Status&lt;/key&gt;&#xd;
	&lt;string&gt;Acknowledged&lt;/string&gt;&#xd;
	&lt;key&gt;UDID&lt;/key&gt;&#xd;
	&lt;string&gt;${uvalue}&lt;/string&gt;&#xd;
&lt;/dict&gt;&#xd;
&lt;/plist&gt;&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/MDM/Processing/IphoneProfileService.aspx</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-apple-aspen-mdm</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">MDM/1.0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="CommandUUID6" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">CommandUUID6</stringProp>
              <stringProp name="RegexExtractor.regex">[0-9]{2,4}</stringProp>
              <stringProp name="RegexExtractor.template">$0$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/MDM/Processing/IphoneProfileService.aspx - CertificateList" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;&#xd;
&lt;plist version=&quot;1.0&quot;&gt;&#xd;
&lt;dict&gt;&#xd;
	&lt;key&gt;CertificateList&lt;/key&gt;&#xd;
	&lt;array&gt;&#xd;
		&lt;dict&gt;&#xd;
			&lt;key&gt;CommonName&lt;/key&gt;&#xd;
			&lt;string&gt;_ DO NOT INSTALL unless this is your certificate (JMeter root CA)&lt;/string&gt;&#xd;
			&lt;key&gt;Data&lt;/key&gt;&#xd;
			&lt;data&gt;&#xd;
			MIIDoDCCAoigAwIBAgIEWYA+cDANBgkqhkiG9w0BAQsFADB4MQsw&#xd;
			CQYDVQQGEwJVUzEdMBsGA1UECxMUVXNlcm5hbWU6IG5pc2NoaXRo&#xd;
			LnIxSjBIBgNVBAMMQV8gRE8gTk9UIElOU1RBTEwgdW5sZXNzIHRo&#xd;
			aXMgaXMgeW91ciBjZXJ0aWZpY2F0ZSAoSk1ldGVyIHJvb3QgQ0Ep&#xd;
			MB4XDTE0MDgyNzA3MTQwMFoXDTE0MDkwMzA3MTQwMFoweDELMAkG&#xd;
			A1UEBhMCVVMxHTAbBgNVBAsTFFVzZXJuYW1lOiBuaXNjaGl0aC5y&#xd;
			MUowSAYDVQQDDEFfIERPIE5PVCBJTlNUQUxMIHVubGVzcyB0aGlz&#xd;
			IGlzIHlvdXIgY2VydGlmaWNhdGUgKEpNZXRlciByb290IENBKTCC&#xd;
			ASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMYUaINpFfMv&#xd;
			9Kdo9Uus5y74Vqxq9IGJa2cmyKIlxfYr6scdWCbtd6vAu2CoQ6My&#xd;
			1NGlPxoTemc/yaZUjRKSzpc/aTLyEgoujhLCIZ14RVn+xzt8su+u&#xd;
			SQnxWbkNxs8D1HxWFdZXJeQYyKF3N6MCTE4z+bJZmvgNJO7kKpfN&#xd;
			PxYzEhAHWGh5jdFiOyeTREGH3kwCD0QnILfVfK/y4vvDHmS8P3l3&#xd;
			gXNAy5muaY1lPUFuYAHaUEKbWAAzCJJc06yRCRyLS2qrK+u29v1Z&#xd;
			Wjw7pWuwgiE9+uO5evxyQlMh9jHdVGnSyHOaY4RgIWDkwnGkU/mo&#xd;
			HVqwrTfXgv/GqDL4SesCAwEAAaMyMDAwDwYDVR0TAQH/BAUwAwEB&#xd;
			/zAdBgNVHQ4EFgQUGu5LKRsK07tiTQ3whKynw6tIwXYwDQYJKoZI&#xd;
			hvcNAQELBQADggEBAAUjVant2vRvFb/vawL5utb/Va+/RNf4l5Bk&#xd;
			7YghiSE4FBNg0M4UL/1ecPGbMWYwygyRlt5govxgznFKOKUknmN+&#xd;
			rtyF+sMEjCdoAhZwbMsxmjvRBjWQAxZHpCW31P4w07730sHG1ejO&#xd;
			wzNyql9fvOLIsFe2xnWrNn/p5M+S5OulaOIg0Z8H4m9+q6mlWGEB&#xd;
			Z5rRriZKm5ipKxJfMNFAPsyYemZGyL9KUmXARKXDIb9Sdpw8ezWQ&#xd;
			vi0mlKBwfkR+Jrl5Lyw/er8X09lurL1lF0aq9gKMJAa12kWJY8u+&#xd;
			7yqOwLVq5a6IZlSsl3FasH++3zyowb7VEFa1D2AlbG/438U=&#xd;
			&lt;/data&gt;&#xd;
			&lt;key&gt;IsIdentity&lt;/key&gt;&#xd;
			&lt;false/&gt;&#xd;
		&lt;/dict&gt;&#xd;
		&lt;dict&gt;&#xd;
			&lt;key&gt;CommonName&lt;/key&gt;&#xd;
			&lt;string&gt;QAMDM-SCEP&lt;/string&gt;&#xd;
			&lt;key&gt;Data&lt;/key&gt;&#xd;
			&lt;data&gt;&#xd;
			MIIFDzCCA/egAwIBAgIKTrDKUAAAAABBQzANBgkqhkiG9w0BAQUF&#xd;
			ADBBMRMwEQYKCZImiZPyLGQBGRYDQ09NMRUwEwYKCZImiZPyLGQB&#xd;
			GRYFUUFNRE0xEzARBgNVBAMTClFBTURNLVNDRVAwHhcNMTQwODI3&#xd;
			MDk0NTM3WhcNMTYwODI2MDk0NTM3WjAVMRMwEQYDVQQDEwpRQU1E&#xd;
			TS1TQ0VQMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA&#xd;
			xFQjL55/9gZN2jtTDU4cucXEg6lSovgpvN+Apk1J7HC/hGQRXgNt&#xd;
			Pd0BkbrjEwfpIb4L835w0A8UR3AMPT08LxoHQc8j74iSoUOvliTT&#xd;
			nm3KOp68D9N5UgPUWPZUfZLoS6vKz/xS0AXwREZNbiC4HS6FmUHz&#xd;
			jHNaXBFJeMNADl7wqYMDPt/1bV4Os0G1l/SxXO+ece+ba28MuWPz&#xd;
			ga8xF6Tkq+jO+bLqigFEBIlFhIBroBEEm0/KwyoEffapDAtIVtCt&#xd;
			2B33hdoF5Ucq2MYZZ3yBpALn+rm3GgHljDjtuqiuAdLObudZyl7L&#xd;
			Bs6qTIpvIokN+suRi3aGGVG9QhauzwIDAQABo4ICMzCCAi8wHQYD&#xd;
			VR0OBBYEFCQaV4IAH5SWy3fpVHDvDwV+5HMjMB8GA1UdIwQYMBaA&#xd;
			FMXU/eLKMwAwLrakuLkbP1xuGURGMIHJBgNVHR8EgcEwgb4wgbug&#xd;
			gbiggbWGgbJsZGFwOi8vL0NOPVFBTURNLVNDRVAsQ049UUFNRE0t&#xd;
			U0NFUCxDTj1DRFAsQ049UHVibGljJTIwS2V5JTIwU2VydmljZXMs&#xd;
			Q049U2VydmljZXMsQ049Q29uZmlndXJhdGlvbixEQz1RQU1ETSxE&#xd;
			Qz1DT00/Y2VydGlmaWNhdGVSZXZvY2F0aW9uTGlzdD9iYXNlP29i&#xd;
			amVjdENsYXNzPWNSTERpc3RyaWJ1dGlvblBvaW50MIG6BggrBgEF&#xd;
			BQcBAQSBrTCBqjCBpwYIKwYBBQUHMAKGgZpsZGFwOi8vL0NOPVFB&#xd;
			TURNLVNDRVAsQ049QUlBLENOPVB1YmxpYyUyMEtleSUyMFNlcnZp&#xd;
			Y2VzLENOPVNlcnZpY2VzLENOPUNvbmZpZ3VyYXRpb24sREM9UUFN&#xd;
			RE0sREM9Q09NP2NBQ2VydGlmaWNhdGU/YmFzZT9vYmplY3RDbGFz&#xd;
			cz1jZXJ0aWZpY2F0aW9uQXV0aG9yaXR5MD8GCSsGAQQBgjcUAgQy&#xd;
			HjAASQBQAFMARQBDAEkAbgB0AGUAcgBtAGUAZABpAGEAdABlAE8A&#xd;
			ZgBmAGwAaQBuAGUwDgYDVR0PAQH/BAQDAgWgMBMGA1UdJQQMMAoG&#xd;
			CCsGAQUFCAICMA0GCSqGSIb3DQEBBQUAA4IBAQBSruA7krKH/mgN&#xd;
			DIO4MlNC3J5Xcptxq0EL9jggbDLLj+XFzewL8JhNFfk5QHoG7zJG&#xd;
			rKEfwMi4sx//lc493pBX5s74J16sjA80sIz3MbBw2kEnQ1jD0FJR&#xd;
			c9GkQ8fCufyWZe2yxaxTw7qjdR++i7xrOw/7++zBktcoGd9FCGff&#xd;
			iIwX0rYujaMmAQ3UtdSHr6eHm3i9PzVXsT2MLCP6Q28psxl7gUhK&#xd;
			8vgVo6ypZV1Bapq/gxoMojcEQoF1rKCrB7UQgzUB7Xwk4ezmaHL4&#xd;
			v9n4aSsWTnqZCqVdo82cdIzjOTq9D+SRVI+oKy3qnGorSs/t+/52&#xd;
			OmFGEWHDi2zzuwIV&#xd;
			&lt;/data&gt;&#xd;
			&lt;key&gt;IsIdentity&lt;/key&gt;&#xd;
			&lt;true/&gt;&#xd;
		&lt;/dict&gt;&#xd;
	&lt;/array&gt;&#xd;
	&lt;key&gt;CommandUUID&lt;/key&gt;&#xd;
	&lt;string&gt;${CommandUUID6}&lt;/string&gt;&#xd;
	&lt;key&gt;Status&lt;/key&gt;&#xd;
	&lt;string&gt;Acknowledged&lt;/string&gt;&#xd;
	&lt;key&gt;UDID&lt;/key&gt;&#xd;
	&lt;string&gt;${uvalue}&lt;/string&gt;&#xd;
&lt;/dict&gt;&#xd;
&lt;/plist&gt;&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/MDM/Processing/IphoneProfileService.aspx</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-apple-aspen-mdm</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">MDM/1.0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="CommandUUID7" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">CommandUUID7</stringProp>
              <stringProp name="RegexExtractor.regex">[0-9]{2,4}</stringProp>
              <stringProp name="RegexExtractor.template">$0$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
            <stringProp name="BeanShellSampler.query">import org.apache.commons.codec.binary.Base64;
import java.util.Arrays;
 
 String authorizationID = &quot;qamdm\\\\${username}:${pwd}&quot;;

  byte[] byteArray = Base64.encodeBase64(authorizationID.getBytes());

  String encodedString = new String(byteArray);

encodedString = &quot;Basic &quot;+ encodedString;

vars.put(&quot;Encryptedstring&quot;,encodedString);
return encodedString;</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/MDM/Processing/IphoneProfileService.aspx -  Acknowledged" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;&#xd;
&lt;plist version=&quot;1.0&quot;&gt;&#xd;
&lt;dict&gt;&#xd;
	&lt;key&gt;CommandUUID&lt;/key&gt;&#xd;
	&lt;string&gt;${CommandUUID7}&lt;/string&gt;&#xd;
	&lt;key&gt;Status&lt;/key&gt;&#xd;
	&lt;string&gt;Acknowledged&lt;/string&gt;&#xd;
	&lt;key&gt;UDID&lt;/key&gt;&#xd;
	&lt;string&gt;${uvalue}&lt;/string&gt;&#xd;
&lt;/dict&gt;&#xd;
&lt;/plist&gt;&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/MDM/Processing/IphoneProfileService.aspx</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-apple-aspen-mdm</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">MDM/1.0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="CommandUUID8" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">CommandUUID8</stringProp>
              <stringProp name="RegexExtractor.regex">[0-9]{2,4}</stringProp>
              <stringProp name="RegexExtractor.template">$0$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/MDM/Processing/IphoneProfileService.aspx - ProfileList" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;&#xd;
&lt;plist version=&quot;1.0&quot;&gt;&#xd;
&lt;dict&gt;&#xd;
	&lt;key&gt;CommandUUID&lt;/key&gt;&#xd;
	&lt;string&gt;${CommandUUID8}&lt;/string&gt;&#xd;
	&lt;key&gt;ProfileList&lt;/key&gt;&#xd;
	&lt;array&gt;&#xd;
		&lt;dict&gt;&#xd;
			&lt;key&gt;HasRemovalPasscode&lt;/key&gt;&#xd;
			&lt;false/&gt;&#xd;
			&lt;key&gt;IsEncrypted&lt;/key&gt;&#xd;
			&lt;false/&gt;&#xd;
			&lt;key&gt;PayloadContent&lt;/key&gt;&#xd;
			&lt;array&gt;&#xd;
				&lt;dict&gt;&#xd;
					&lt;key&gt;PayloadDisplayName&lt;/key&gt;&#xd;
					&lt;string&gt;_ DO NOT INSTALL unless this is your certificate (JMeter root CA)&lt;/string&gt;&#xd;
					&lt;key&gt;PayloadIdentifier&lt;/key&gt;&#xd;
					&lt;string&gt;ecc9e66ea42f69ef29acf5deb10e40eee873b5fca&lt;/string&gt;&#xd;
					&lt;key&gt;PayloadType&lt;/key&gt;&#xd;
					&lt;string&gt;com.apple.security.pem&lt;/string&gt;&#xd;
					&lt;key&gt;PayloadVersion&lt;/key&gt;&#xd;
					&lt;integer&gt;1&lt;/integer&gt;&#xd;
				&lt;/dict&gt;&#xd;
			&lt;/array&gt;&#xd;
			&lt;key&gt;PayloadDisplayName&lt;/key&gt;&#xd;
			&lt;string&gt;_ DO NOT INSTALL unless this is your certificate (JMeter root CA)&lt;/string&gt;&#xd;
			&lt;key&gt;PayloadIdentifier&lt;/key&gt;&#xd;
			&lt;string&gt;ecc9e66ea42f69ef29acf5deb10e40eee873b5fca&lt;/string&gt;&#xd;
			&lt;key&gt;PayloadRemovalDisallowed&lt;/key&gt;&#xd;
			&lt;false/&gt;&#xd;
			&lt;key&gt;PayloadUUID&lt;/key&gt;&#xd;
			&lt;string&gt;4119EA5B-107B-4B29-AF15-A200DD39CB59&lt;/string&gt;&#xd;
			&lt;key&gt;PayloadVersion&lt;/key&gt;&#xd;
			&lt;integer&gt;1&lt;/integer&gt;&#xd;
			&lt;key&gt;SignerCertificates&lt;/key&gt;&#xd;
			&lt;array&gt;&#xd;
				&lt;data&gt;&#xd;
				MIIDoDCCAoigAwIBAgIEWYA+cDANBgkqhkiG9w0BAQsF&#xd;
				ADB4MQswCQYDVQQGEwJVUzEdMBsGA1UECxMUVXNlcm5h&#xd;
				bWU6IG5pc2NoaXRoLnIxSjBIBgNVBAMMQV8gRE8gTk9U&#xd;
				IElOU1RBTEwgdW5sZXNzIHRoaXMgaXMgeW91ciBjZXJ0&#xd;
				aWZpY2F0ZSAoSk1ldGVyIHJvb3QgQ0EpMB4XDTE0MDgy&#xd;
				NzA3MTQwMFoXDTE0MDkwMzA3MTQwMFoweDELMAkGA1UE&#xd;
				BhMCVVMxHTAbBgNVBAsTFFVzZXJuYW1lOiBuaXNjaGl0&#xd;
				aC5yMUowSAYDVQQDDEFfIERPIE5PVCBJTlNUQUxMIHVu&#xd;
				bGVzcyB0aGlzIGlzIHlvdXIgY2VydGlmaWNhdGUgKEpN&#xd;
				ZXRlciByb290IENBKTCCASIwDQYJKoZIhvcNAQEBBQAD&#xd;
				ggEPADCCAQoCggEBAMYUaINpFfMv9Kdo9Uus5y74Vqxq&#xd;
				9IGJa2cmyKIlxfYr6scdWCbtd6vAu2CoQ6My1NGlPxoT&#xd;
				emc/yaZUjRKSzpc/aTLyEgoujhLCIZ14RVn+xzt8su+u&#xd;
				SQnxWbkNxs8D1HxWFdZXJeQYyKF3N6MCTE4z+bJZmvgN&#xd;
				JO7kKpfNPxYzEhAHWGh5jdFiOyeTREGH3kwCD0QnILfV&#xd;
				fK/y4vvDHmS8P3l3gXNAy5muaY1lPUFuYAHaUEKbWAAz&#xd;
				CJJc06yRCRyLS2qrK+u29v1ZWjw7pWuwgiE9+uO5evxy&#xd;
				QlMh9jHdVGnSyHOaY4RgIWDkwnGkU/moHVqwrTfXgv/G&#xd;
				qDL4SesCAwEAAaMyMDAwDwYDVR0TAQH/BAUwAwEB/zAd&#xd;
				BgNVHQ4EFgQUGu5LKRsK07tiTQ3whKynw6tIwXYwDQYJ&#xd;
				KoZIhvcNAQELBQADggEBAAUjVant2vRvFb/vawL5utb/&#xd;
				Va+/RNf4l5Bk7YghiSE4FBNg0M4UL/1ecPGbMWYwygyR&#xd;
				lt5govxgznFKOKUknmN+rtyF+sMEjCdoAhZwbMsxmjvR&#xd;
				BjWQAxZHpCW31P4w07730sHG1ejOwzNyql9fvOLIsFe2&#xd;
				xnWrNn/p5M+S5OulaOIg0Z8H4m9+q6mlWGEBZ5rRriZK&#xd;
				m5ipKxJfMNFAPsyYemZGyL9KUmXARKXDIb9Sdpw8ezWQ&#xd;
				vi0mlKBwfkR+Jrl5Lyw/er8X09lurL1lF0aq9gKMJAa1&#xd;
				2kWJY8u+7yqOwLVq5a6IZlSsl3FasH++3zyowb7VEFa1&#xd;
				D2AlbG/438U=&#xd;
				&lt;/data&gt;&#xd;
			&lt;/array&gt;&#xd;
		&lt;/dict&gt;&#xd;
		&lt;dict&gt;&#xd;
			&lt;key&gt;HasRemovalPasscode&lt;/key&gt;&#xd;
			&lt;false/&gt;&#xd;
			&lt;key&gt;IsEncrypted&lt;/key&gt;&#xd;
			&lt;false/&gt;&#xd;
			&lt;key&gt;PayloadContent&lt;/key&gt;&#xd;
			&lt;array&gt;&#xd;
				&lt;dict&gt;&#xd;
					&lt;key&gt;PayloadDescription&lt;/key&gt;&#xd;
					&lt;string&gt;ConfiguresSCEP&lt;/string&gt;&#xd;
					&lt;key&gt;PayloadIdentifier&lt;/key&gt;&#xd;
					&lt;string&gt;com.mdm.profile.scep.SCEP&lt;/string&gt;&#xd;
					&lt;key&gt;PayloadOrganization&lt;/key&gt;&#xd;
					&lt;string&gt;Tangoe&lt;/string&gt;&#xd;
					&lt;key&gt;PayloadType&lt;/key&gt;&#xd;
					&lt;string&gt;com.apple.security.scep&lt;/string&gt;&#xd;
					&lt;key&gt;PayloadVersion&lt;/key&gt;&#xd;
					&lt;integer&gt;1&lt;/integer&gt;&#xd;
				&lt;/dict&gt;&#xd;
				&lt;dict&gt;&#xd;
					&lt;key&gt;PayloadDescription&lt;/key&gt;&#xd;
					&lt;string&gt;MDM Payload&lt;/string&gt;&#xd;
					&lt;key&gt;PayloadDisplayName&lt;/key&gt;&#xd;
					&lt;string&gt;MDM Settings&lt;/string&gt;&#xd;
					&lt;key&gt;PayloadIdentifier&lt;/key&gt;&#xd;
					&lt;string&gt;com.mdm.profile.base.mdm&lt;/string&gt;&#xd;
					&lt;key&gt;PayloadOrganization&lt;/key&gt;&#xd;
					&lt;string&gt;Tangoe&lt;/string&gt;&#xd;
					&lt;key&gt;PayloadType&lt;/key&gt;&#xd;
					&lt;string&gt;com.apple.mdm&lt;/string&gt;&#xd;
					&lt;key&gt;PayloadVersion&lt;/key&gt;&#xd;
					&lt;integer&gt;1&lt;/integer&gt;&#xd;
				&lt;/dict&gt;&#xd;
			&lt;/array&gt;&#xd;
			&lt;key&gt;PayloadDescription&lt;/key&gt;&#xd;
			&lt;string&gt;&lt;/string&gt;&#xd;
			&lt;key&gt;PayloadDisplayName&lt;/key&gt;&#xd;
			&lt;string&gt;iOSBaseProfile&lt;/string&gt;&#xd;
			&lt;key&gt;PayloadIdentifier&lt;/key&gt;&#xd;
			&lt;string&gt;com.mdm.profile.base&lt;/string&gt;&#xd;
			&lt;key&gt;PayloadOrganization&lt;/key&gt;&#xd;
			&lt;string&gt;Tangoe&lt;/string&gt;&#xd;
			&lt;key&gt;PayloadRemovalDisallowed&lt;/key&gt;&#xd;
			&lt;false/&gt;&#xd;
			&lt;key&gt;PayloadUUID&lt;/key&gt;&#xd;
			&lt;string&gt;39d13ba3-f973-4c27-be0c-69a4dbc99fa3&lt;/string&gt;&#xd;
			&lt;key&gt;PayloadVersion&lt;/key&gt;&#xd;
			&lt;integer&gt;1&lt;/integer&gt;&#xd;
		&lt;/dict&gt;&#xd;
		&lt;dict&gt;&#xd;
			&lt;key&gt;HasRemovalPasscode&lt;/key&gt;&#xd;
			&lt;false/&gt;&#xd;
			&lt;key&gt;IsEncrypted&lt;/key&gt;&#xd;
			&lt;false/&gt;&#xd;
			&lt;key&gt;PayloadContent&lt;/key&gt;&#xd;
			&lt;array&gt;&#xd;
				&lt;dict&gt;&#xd;
					&lt;key&gt;PayloadDescription&lt;/key&gt;&#xd;
					&lt;string&gt;Configures device for use with Microsoft Exchange ActiveSync services.&lt;/string&gt;&#xd;
					&lt;key&gt;PayloadDisplayName&lt;/key&gt;&#xd;
					&lt;string&gt;Exchange ActiveSync&lt;/string&gt;&#xd;
					&lt;key&gt;PayloadIdentifier&lt;/key&gt;&#xd;
					&lt;string&gt;com.mdm.profile.exchange.eas&lt;/string&gt;&#xd;
					&lt;key&gt;PayloadOrganization&lt;/key&gt;&#xd;
					&lt;string&gt;Tangoe Inc&lt;/string&gt;&#xd;
					&lt;key&gt;PayloadType&lt;/key&gt;&#xd;
					&lt;string&gt;com.apple.eas.account&lt;/string&gt;&#xd;
					&lt;key&gt;PayloadVersion&lt;/key&gt;&#xd;
					&lt;integer&gt;1&lt;/integer&gt;&#xd;
				&lt;/dict&gt;&#xd;
			&lt;/array&gt;&#xd;
			&lt;key&gt;PayloadDescription&lt;/key&gt;&#xd;
			&lt;string&gt;Configures Exchange and ActiveSync accounts on your phone&lt;/string&gt;&#xd;
			&lt;key&gt;PayloadDisplayName&lt;/key&gt;&#xd;
			&lt;string&gt;Exchange/ActiveSync Configuration&lt;/string&gt;&#xd;
			&lt;key&gt;PayloadIdentifier&lt;/key&gt;&#xd;
			&lt;string&gt;com.mdm.profile.exchange&lt;/string&gt;&#xd;
			&lt;key&gt;PayloadOrganization&lt;/key&gt;&#xd;
			&lt;string&gt;Tangoe Inc&lt;/string&gt;&#xd;
			&lt;key&gt;PayloadRemovalDisallowed&lt;/key&gt;&#xd;
			&lt;false/&gt;&#xd;
			&lt;key&gt;PayloadUUID&lt;/key&gt;&#xd;
			&lt;string&gt;12d3460b-4933-4ecb-9b28-bb61a15eb13a&lt;/string&gt;&#xd;
			&lt;key&gt;PayloadVersion&lt;/key&gt;&#xd;
			&lt;integer&gt;1&lt;/integer&gt;&#xd;
		&lt;/dict&gt;&#xd;
		&lt;dict&gt;&#xd;
			&lt;key&gt;HasRemovalPasscode&lt;/key&gt;&#xd;
			&lt;false/&gt;&#xd;
			&lt;key&gt;IsEncrypted&lt;/key&gt;&#xd;
			&lt;false/&gt;&#xd;
			&lt;key&gt;PayloadContent&lt;/key&gt;&#xd;
			&lt;array&gt;&#xd;
				&lt;dict&gt;&#xd;
					&lt;key&gt;PayloadDescription&lt;/key&gt;&#xd;
					&lt;string&gt;&lt;/string&gt;&#xd;
					&lt;key&gt;PayloadDisplayName&lt;/key&gt;&#xd;
					&lt;string&gt;MDM App Portal&lt;/string&gt;&#xd;
					&lt;key&gt;PayloadIdentifier&lt;/key&gt;&#xd;
					&lt;string&gt;com.tangoe.profile.mdmappportal.webclip&lt;/string&gt;&#xd;
					&lt;key&gt;PayloadType&lt;/key&gt;&#xd;
					&lt;string&gt;com.apple.webClip.managed&lt;/string&gt;&#xd;
					&lt;key&gt;PayloadVersion&lt;/key&gt;&#xd;
					&lt;integer&gt;1&lt;/integer&gt;&#xd;
				&lt;/dict&gt;&#xd;
			&lt;/array&gt;&#xd;
			&lt;key&gt;PayloadDescription&lt;/key&gt;&#xd;
			&lt;string&gt;Configures MDM App Portal Web Clip for your device&lt;/string&gt;&#xd;
			&lt;key&gt;PayloadDisplayName&lt;/key&gt;&#xd;
			&lt;string&gt;MDM App Portal&lt;/string&gt;&#xd;
			&lt;key&gt;PayloadIdentifier&lt;/key&gt;&#xd;
			&lt;string&gt;com.tangoe.profile.mdmappportal&lt;/string&gt;&#xd;
			&lt;key&gt;PayloadRemovalDisallowed&lt;/key&gt;&#xd;
			&lt;false/&gt;&#xd;
			&lt;key&gt;PayloadUUID&lt;/key&gt;&#xd;
			&lt;string&gt;3edf6854-1132-4963-a76a-b057b768ad20&lt;/string&gt;&#xd;
			&lt;key&gt;PayloadVersion&lt;/key&gt;&#xd;
			&lt;integer&gt;1&lt;/integer&gt;&#xd;
		&lt;/dict&gt;&#xd;
	&lt;/array&gt;&#xd;
	&lt;key&gt;Status&lt;/key&gt;&#xd;
	&lt;string&gt;Acknowledged&lt;/string&gt;&#xd;
	&lt;key&gt;UDID&lt;/key&gt;&#xd;
	&lt;string&gt;${uvalue}&lt;/string&gt;&#xd;
&lt;/dict&gt;&#xd;
&lt;/plist&gt;&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/MDM/Processing/IphoneProfileService.aspx</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-apple-aspen-mdm</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">MDM/1.0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/Microsoft-Server-ActiveSync" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mail.qamdm.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Microsoft-Server-ActiveSync</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Apple-iPhone5C4/1102.511</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="X-MS-PolicyKey" elementType="Header">
                  <stringProp name="Header.name">X-MS-PolicyKey</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${Encryptedstring}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/Microsoft-Server-ActiveSync" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mail.qamdm.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Microsoft-Server-ActiveSync</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Apple-iPhone5C4/1102.511</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="X-MS-PolicyKey" elementType="Header">
                  <stringProp name="Header.name">X-MS-PolicyKey</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${Encryptedstring}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/Microsoft-Server-ActiveSync?User=${username}&amp;DeviceId=Appl${IOSdeviceid}&amp;DeviceType=iPhone&amp;Cmd=FolderSync" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x3;&#x1;j&#x0;&#x0;&#x7;VR&#x3;0&#x0;&#x1;&#x1;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">mail.qamdm.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/Microsoft-Server-ActiveSync?User=${username}&amp;DeviceId=Appl${IOSdeviceid}&amp;DeviceType=iPhone&amp;Cmd=FolderSync</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/vnd.ms-sync.wbxml</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-us</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="MS-ASProtocolVersion" elementType="Header">
                  <stringProp name="Header.name">MS-ASProtocolVersion</stringProp>
                  <stringProp name="Header.value">14.1</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Apple-iPhone5C4/1102.511</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="X-MS-PolicyKey" elementType="Header">
                  <stringProp name="Header.name">X-MS-PolicyKey</stringProp>
                  <stringProp name="Header.value">0</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${Encryptedstring}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
